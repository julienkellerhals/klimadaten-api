<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='station_t (core.station_t) (klimadb)' inline='true' name='federated.1760s2t1kosibv16u4re61nz1wwg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.178ievc0dfiycl105u3wf0s0zysp'>
            <connection authentication='username-password' class='postgres' dbname='klimadb' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.178ievc0dfiycl105u3wf0s0zysp' name='station_t' table='[core].[station_t]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.178ievc0dfiycl105u3wf0s0zysp' name='station_t' table='[core].[station_t]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>station_short_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station_short_name]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>station_short_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station_name]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>station_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parameter]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>parameter</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>data_source</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates_x</remote-name>
            <remote-type>3</remote-type>
            <local-name>[coordinates_x]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>coordinates_x</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates_y</remote-name>
            <remote-type>3</remote-type>
            <local-name>[coordinates_y]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>coordinates_y</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elevation</remote-name>
            <remote-type>3</remote-type>
            <local-name>[elevation]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>elevation</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valid_from</remote-name>
            <remote-type>7</remote-type>
            <local-name>[valid_from]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>valid_from</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valid_to</remote-name>
            <remote-type>7</remote-type>
            <local-name>[valid_to]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>valid_to</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='station_t' datatype='table' name='[__tableau_internal_object_id__].[station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Coordinates X' datatype='integer' name='[coordinates_x]' role='measure' semantic-role='' type='quantitative' />
      <column caption='Coordinates Y' datatype='integer' name='[coordinates_y]' role='measure' type='quantitative' />
      <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
      <column caption='Elevation' datatype='integer' name='[elevation]' role='measure' type='quantitative' />
      <column caption='Latitude' datatype='string' name='[latitude]' role='dimension' type='nominal' />
      <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal' />
      <column caption='Parameter' datatype='string' name='[parameter]' role='dimension' type='nominal' />
      <column caption='Station Name' datatype='string' name='[station_name]' role='dimension' type='nominal' />
      <column caption='Station Short Name' datatype='string' name='[station_short_name]' role='dimension' type='nominal' />
      <column caption='Valid From' datatype='date' name='[valid_from]' role='dimension' type='ordinal' />
      <column caption='Valid To' datatype='date' name='[valid_to]' role='dimension' type='ordinal' />
      <column-instance column='[coordinates_x]' derivation='None' name='[none:coordinates_x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coordinates_y]' derivation='None' name='[none:coordinates_y:qk]' pivot='key' type='quantitative' />
      <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Coordinates X,Coordinates Y,Data Source)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:coordinates_x:qk]' />
          <groupfilter function='level-members' level='[none:coordinates_y:qk]' />
          <groupfilter function='level-members' level='[none:data_source:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:data_source:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Gebäudeversicherung glarnerSach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ostluft&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ARPA Lombardia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kanton Wallis; Dienststelle für Umweltschutz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton de Vaud&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Météo-France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kanton Aargau; Departement Bau, Verkehr und Umwelt;&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schweizer Armee - Luftwaffe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gemeinde Burgdorf&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Repubblica e Cantone Ticino; Dipartimento del terri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Deutscher Wetterdienst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MeteoGroup Schweiz AG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kanton Thurgau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zentralanstalt für Meteorologie und Geodynamik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Autonome Provinz Bozen - Südtirol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kanton Zürich; Amt für Abfall, Wasser, Energie und&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kanton Solothurn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Windguru / Martin Schuler&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eidg. Forschungsanstalt WSL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MeteoSchweiz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kanton Bern&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schweizerischer Nationalpark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kanton Graubünden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Servizio Meteorologico dell&apos;Aeronautica Militare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kanton St. Gallen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Windspots Sàrl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanton Uri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;inNET Monitoring AG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;République et canton de Genève&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eidg. Institut für Schnee- und Lawinenforschung&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MeteoSchweiz Test&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botanisches Institut der Universität Basel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtensteinische Landesverwaltung&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kanton Luzern&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swiss Permafrost Monitoring Network&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kachelmannwetter GmbH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;République et canton de Neuchâtel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bundesamt für Umwelt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lufthygieneamt beider Basel&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Switzerland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='station_t' id='station_t (core.station_t)_FB6F47104C64468FB5A8CFE34F5C1D3C'>
            <properties context=''>
              <relation connection='postgres.178ievc0dfiycl105u3wf0s0zysp' name='station_t' table='[core].[station_t]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='measurements_t (core.measurements_t)+ (klimadb)' inline='true' name='federated.0j3gb050qyikdy187orwc0zrwv6g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.06sfp5p1k419yg12qisdc0zxhzkh'>
            <connection authentication='username-password' class='postgres' dbname='klimadb' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.06sfp5p1k419yg12qisdc0zxhzkh' name='measurements_t' table='[core].[measurements_t]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.06sfp5p1k419yg12qisdc0zxhzkh' name='measurements_t' table='[core].[measurements_t]' type='table' />
          <relation connection='postgres.06sfp5p1k419yg12qisdc0zxhzkh' name='station_t' table='[core].[station_t]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[coordinates_x]' value='[station_t].[coordinates_x]' />
          <map key='[coordinates_y]' value='[station_t].[coordinates_y]' />
          <map key='[data_source]' value='[station_t].[data_source]' />
          <map key='[elevation]' value='[station_t].[elevation]' />
          <map key='[granularity]' value='[measurements_t].[granularity]' />
          <map key='[latitude]' value='[station_t].[latitude]' />
          <map key='[longitude]' value='[station_t].[longitude]' />
          <map key='[meas_date]' value='[measurements_t].[meas_date]' />
          <map key='[meas_name]' value='[measurements_t].[meas_name]' />
          <map key='[meas_value]' value='[measurements_t].[meas_value]' />
          <map key='[parameter]' value='[station_t].[parameter]' />
          <map key='[source]' value='[measurements_t].[source]' />
          <map key='[station]' value='[measurements_t].[station]' />
          <map key='[station_name]' value='[station_t].[station_name]' />
          <map key='[station_short_name]' value='[station_t].[station_short_name]' />
          <map key='[valid_from (station_t)]' value='[station_t].[valid_from]' />
          <map key='[valid_from]' value='[measurements_t].[valid_from]' />
          <map key='[valid_to (station_t)]' value='[station_t].[valid_to]' />
          <map key='[valid_to]' value='[measurements_t].[valid_to]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>meas_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[meas_date]</local-name>
            <parent-name>[measurements_t]</parent-name>
            <remote-alias>meas_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[measurements_t]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>granularity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[granularity]</local-name>
            <parent-name>[measurements_t]</parent-name>
            <remote-alias>granularity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>meas_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[meas_name]</local-name>
            <parent-name>[measurements_t]</parent-name>
            <remote-alias>meas_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>meas_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[meas_value]</local-name>
            <parent-name>[measurements_t]</parent-name>
            <remote-alias>meas_value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[measurements_t]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valid_from</remote-name>
            <remote-type>7</remote-type>
            <local-name>[valid_from]</local-name>
            <parent-name>[measurements_t]</parent-name>
            <remote-alias>valid_from</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valid_to</remote-name>
            <remote-type>7</remote-type>
            <local-name>[valid_to]</local-name>
            <parent-name>[measurements_t]</parent-name>
            <remote-alias>valid_to</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_short_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station_short_name]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>station_short_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station_name]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>station_name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parameter]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>parameter</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>data_source</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates_x</remote-name>
            <remote-type>3</remote-type>
            <local-name>[coordinates_x]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>coordinates_x</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates_y</remote-name>
            <remote-type>3</remote-type>
            <local-name>[coordinates_y]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>coordinates_y</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elevation</remote-name>
            <remote-type>3</remote-type>
            <local-name>[elevation]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>elevation</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valid_from</remote-name>
            <remote-type>7</remote-type>
            <local-name>[valid_from (station_t)]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>valid_from</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valid_to</remote-name>
            <remote-type>7</remote-type>
            <local-name>[valid_to (station_t)]</local-name>
            <parent-name>[station_t]</parent-name>
            <remote-alias>valid_to</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='yearSnowfall' datatype='real' name='[10y avg (copy)_1811010036948631559]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([meas_date]) &gt; YEAR(TODAY()) THEN&#13;&#10;    [meas_value]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
      </column>
      <column caption='10y avg' datatype='real' name='[Calculation_1811010036947206148]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([meas_date]) &gt; YEAR(TODAY()) - 10 THEN&#13;&#10;    [meas_value]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='measurements_t' datatype='table' name='[__tableau_internal_object_id__].[measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='station_t' datatype='table' name='[__tableau_internal_object_id__].[station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C]' role='measure' type='quantitative' />
      <column caption='Coordinates X' datatype='integer' name='[coordinates_x]' role='measure' type='quantitative' />
      <column caption='Coordinates Y' datatype='integer' name='[coordinates_y]' role='measure' type='quantitative' />
      <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
      <column caption='Elevation' datatype='integer' name='[elevation]' role='measure' type='quantitative' />
      <column caption='Granularity' datatype='string' name='[granularity]' role='dimension' type='nominal' />
      <column caption='Latitude' datatype='string' name='[latitude]' role='dimension' type='nominal' />
      <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal' />
      <column caption='Meas Date' datatype='date' name='[meas_date]' role='dimension' type='ordinal' />
      <column caption='Meas Name' datatype='string' name='[meas_name]' role='dimension' type='nominal' />
      <column caption='Meas Value' datatype='real' name='[meas_value]' role='measure' type='quantitative' />
      <column caption='Parameter' datatype='string' name='[parameter]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
      <column caption='Station Name' datatype='string' name='[station_name]' role='dimension' type='nominal' />
      <column caption='Station Short Name' datatype='string' name='[station_short_name]' role='dimension' type='nominal' />
      <column caption='Valid From (Station T)' datatype='date' name='[valid_from (station_t)]' role='dimension' type='ordinal' />
      <column caption='Valid From' datatype='date' name='[valid_from]' role='dimension' type='ordinal' />
      <column caption='Valid To (Station T)' datatype='date' name='[valid_to (station_t)]' role='dimension' type='ordinal' />
      <column caption='Valid To' datatype='date' name='[valid_to]' role='dimension' type='ordinal' />
      <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:data_source:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kachelmannwetter GmbH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Schweizer Armee - Luftwaffe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botanisches Institut der Universität Basel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lufthygieneamt beider Basel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eidg. Institut für Schnee- und Lawinenforschung&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ostluft&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kanton Luzern&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Windguru / Martin Schuler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kanton Aargau; Departement Bau, Verkehr und Umwelt;&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schweizerischer Nationalpark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gebäudeversicherung glarnerSach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Repubblica e Cantone Ticino; Dipartimento del terri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kanton Zürich; Amt für Abfall, Wasser, Energie und&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bundesamt für Umwelt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MeteoGroup Schweiz AG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kanton Uri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gemeinde Burgdorf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;République et canton de Genève&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kanton Solothurn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zentralanstalt für Meteorologie und Geodynamik&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kanton St. Gallen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kanton Wallis; Dienststelle für Umweltschutz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtensteinische Landesverwaltung&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kanton Bern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Servizio Meteorologico dell&apos;Aeronautica Militare&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;inNET Monitoring AG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;République et canton de Neuchâtel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canton de Vaud&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MeteoSchweiz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kanton Thurgau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kanton Graubünden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swiss Permafrost Monitoring Network&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eidg. Forschungsanstalt WSL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MeteoSchweiz Test&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Switzerland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='measurements_t' id='measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003'>
            <properties context=''>
              <relation connection='postgres.06sfp5p1k419yg12qisdc0zxhzkh' name='measurements_t' table='[core].[measurements_t]' type='table' />
            </properties>
          </object>
          <object caption='station_t' id='station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C'>
            <properties context=''>
              <relation connection='postgres.06sfp5p1k419yg12qisdc0zxhzkh' name='station_t' table='[core].[station_t]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[station]' />
              <expression op='[station_short_name]' />
            </expression>
            <first-end-point object-id='measurements_t (core.measurements_t)_52AF86B14E694831B8E0167FAC6A7003' />
            <second-end-point object-id='station_t (core.station_t)_1BD627FF6E934E749E51EB57E4C0576C' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Custom SQL Query (klimadb)' inline='true' name='federated.0qrelc61wm40c0154hr1z0opcrur' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0cznt3d0i7u0tu112vc8y1udxusv'>
            <connection authentication='username-password' class='postgres' dbname='klimadb' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0cznt3d0i7u0tu112vc8y1udxusv' name='Custom SQL Query' type='text'><![CDATA[SELECT
	prevY.station_name,
	prevY.coordinates_x,
	prevY.coordinates_y,
	prevY.prev_year_avg,
	prevYs.prev_5_years_avg
FROM (
	SELECT
		stn.station_name,
		stn.coordinates_x,
		stn.coordinates_y,
		AVG(meas.meas_value) as prev_year_avg
	FROM core.measurements_t meas
	JOIN core.station_t stn ON meas.station = stn.station_short_name
	WHERE 
		meas.meas_name = 'hns000d0'
	AND
		meas.meas_date >> now() - interval '1 year'
	GROUP BY 
		stn.station_name,
		stn.coordinates_x,
		stn.coordinates_y
) as prevY
JOIN (
	SELECT
		stn.station_name,
		AVG(meas.meas_value) as prev_5_years_avg
	FROM core.measurements_t meas
	JOIN core.station_t stn ON meas.station = stn.station_short_name
	WHERE 
		meas.meas_name = 'hns000d0'
	AND
		meas.meas_date >> now() - interval '6 year'
	AND
		meas.meas_date << now() - interval '1 year'
	GROUP BY 
		stn.station_name
) as prevYs
ON prevY.station_name = prevYs.station_name]]></_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0cznt3d0i7u0tu112vc8y1udxusv' name='Custom SQL Query' type='text'><![CDATA[SELECT
	prevY.station_name,
	prevY.coordinates_x,
	prevY.coordinates_y,
	prevY.prev_year_avg,
	prevYs.prev_5_years_avg
FROM (
	SELECT
		stn.station_name,
		stn.coordinates_x,
		stn.coordinates_y,
		AVG(meas.meas_value) as prev_year_avg
	FROM core.measurements_t meas
	JOIN core.station_t stn ON meas.station = stn.station_short_name
	WHERE 
		meas.meas_name = 'hns000d0'
	AND
		meas.meas_date >> now() - interval '1 year'
	GROUP BY 
		stn.station_name,
		stn.coordinates_x,
		stn.coordinates_y
) as prevY
JOIN (
	SELECT
		stn.station_name,
		AVG(meas.meas_value) as prev_5_years_avg
	FROM core.measurements_t meas
	JOIN core.station_t stn ON meas.station = stn.station_short_name
	WHERE 
		meas.meas_name = 'hns000d0'
	AND
		meas.meas_date >> now() - interval '6 year'
	AND
		meas.meas_date << now() - interval '1 year'
	GROUP BY 
		stn.station_name
) as prevYs
ON prevY.station_name = prevYs.station_name]]></_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station_name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>station_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AE3824EB87544F2A934AB4293B9C27A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates_x</remote-name>
            <remote-type>3</remote-type>
            <local-name>[coordinates_x]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>coordinates_x</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AE3824EB87544F2A934AB4293B9C27A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates_y</remote-name>
            <remote-type>3</remote-type>
            <local-name>[coordinates_y]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>coordinates_y</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AE3824EB87544F2A934AB4293B9C27A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_year_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prev_year_avg]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>prev_year_avg</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AE3824EB87544F2A934AB4293B9C27A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_5_years_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prev_5_years_avg]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>prev_5_years_avg</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_AE3824EB87544F2A934AB4293B9C27A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='5y diff' datatype='real' name='[Calculation_1811010036963237896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[prev_year_avg] * 100 / [prev_5_years_avg] - 100' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_AE3824EB87544F2A934AB4293B9C27A8]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[coordinates_x]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[coordinates_y]' role='dimension' type='ordinal' />
      <column datatype='string' name='[station_name]' role='dimension' type='nominal' />
      <group caption='Action (station_name)' hidden='true' name='[Action (station_name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Switzerland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_AE3824EB87544F2A934AB4293B9C27A8'>
            <properties context=''>
              <relation connection='postgres.0cznt3d0i7u0tu112vc8y1udxusv' name='Custom SQL Query' type='text'><![CDATA[SELECT
	prevY.station_name,
	prevY.coordinates_x,
	prevY.coordinates_y,
	prevY.prev_year_avg,
	prevYs.prev_5_years_avg
FROM (
	SELECT
		stn.station_name,
		stn.coordinates_x,
		stn.coordinates_y,
		AVG(meas.meas_value) as prev_year_avg
	FROM core.measurements_t meas
	JOIN core.station_t stn ON meas.station = stn.station_short_name
	WHERE 
		meas.meas_name = 'hns000d0'
	AND
		meas.meas_date >> now() - interval '1 year'
	GROUP BY 
		stn.station_name,
		stn.coordinates_x,
		stn.coordinates_y
) as prevY
JOIN (
	SELECT
		stn.station_name,
		AVG(meas.meas_value) as prev_5_years_avg
	FROM core.measurements_t meas
	JOIN core.station_t stn ON meas.station = stn.station_short_name
	WHERE 
		meas.meas_name = 'hns000d0'
	AND
		meas.meas_date >> now() - interval '6 year'
	AND
		meas.meas_date << now() - interval '1 year'
	GROUP BY 
		stn.station_name
) as prevYs
ON prevY.station_name = prevYs.station_name]]></relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Custom SQL Query (klimadb) (2)' inline='true' name='federated.1fzbgox0387g3b10q6k7b0yad0xd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1g1wvou1903hl518u0v3c1hpd7ra'>
            <connection authentication='username-password' class='postgres' dbname='klimadb' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1g1wvou1903hl518u0v3c1hpd7ra' name='Custom SQL Query' type='text'><![CDATA[SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	1 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '1 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	2 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '2 year'
AND
	meas.meas_date << now() - interval '1 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	3 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '3 year'
AND
	meas.meas_date << now() - interval '2 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	4 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '4 year'
AND
	meas.meas_date << now() - interval '3 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	5 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '5 year'
AND
	meas.meas_date << now() - interval '4 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	6 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '6 year'
AND
	meas.meas_date << now() - interval '5 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	7 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '7 year'
AND
	meas.meas_date << now() - interval '6 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	8 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '8 year'
AND
	meas.meas_date << now() - interval '7 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	9 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '9 year'
AND
	meas.meas_date << now() - interval '8 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	10 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '10 year'
AND
	meas.meas_date << now() - interval '9 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y]]></_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1g1wvou1903hl518u0v3c1hpd7ra' name='Custom SQL Query' type='text'><![CDATA[SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	1 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '1 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	2 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '2 year'
AND
	meas.meas_date << now() - interval '1 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	3 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '3 year'
AND
	meas.meas_date << now() - interval '2 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	4 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '4 year'
AND
	meas.meas_date << now() - interval '3 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	5 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '5 year'
AND
	meas.meas_date << now() - interval '4 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	6 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '6 year'
AND
	meas.meas_date << now() - interval '5 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	7 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '7 year'
AND
	meas.meas_date << now() - interval '6 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	8 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '8 year'
AND
	meas.meas_date << now() - interval '7 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	9 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '9 year'
AND
	meas.meas_date << now() - interval '8 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	10 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '10 year'
AND
	meas.meas_date << now() - interval '9 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y]]></_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station_name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>station_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5F38BDB37C0A4A75B97A677EEF3F6057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates_x</remote-name>
            <remote-type>3</remote-type>
            <local-name>[coordinates_x]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>coordinates_x</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5F38BDB37C0A4A75B97A677EEF3F6057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates_y</remote-name>
            <remote-type>3</remote-type>
            <local-name>[coordinates_y]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>coordinates_y</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5F38BDB37C0A4A75B97A677EEF3F6057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lookback_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[lookback_year]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>lookback_year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5F38BDB37C0A4A75B97A677EEF3F6057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_year_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prev_year_avg]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>prev_year_avg</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5F38BDB37C0A4A75B97A677EEF3F6057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_5F38BDB37C0A4A75B97A677EEF3F6057]' role='measure' type='quantitative' />
      <column datatype='integer' name='[coordinates_x]' role='measure' type='quantitative' />
      <column datatype='integer' name='[coordinates_y]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[lookback_year]' role='dimension' type='ordinal' />
      <column datatype='string' name='[station_name]' role='dimension' type='nominal' />
      <column-instance column='[coordinates_x]' derivation='None' name='[none:coordinates_x:ok]' pivot='key' type='ordinal' />
      <column-instance column='[coordinates_y]' derivation='None' name='[none:coordinates_y:ok]' pivot='key' type='ordinal' />
      <group caption='Action (coordinates_x,coordinates_y)' hidden='true' name='[Action (coordinates_x,coordinates_y)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:coordinates_x:ok]' />
          <groupfilter function='level-members' level='[none:coordinates_y:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (station_name)' hidden='true' name='[Action (station_name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Switzerland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_5F38BDB37C0A4A75B97A677EEF3F6057'>
            <properties context=''>
              <relation connection='postgres.1g1wvou1903hl518u0v3c1hpd7ra' name='Custom SQL Query' type='text'><![CDATA[SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	1 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '1 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	2 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '2 year'
AND
	meas.meas_date << now() - interval '1 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	3 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '3 year'
AND
	meas.meas_date << now() - interval '2 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	4 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '4 year'
AND
	meas.meas_date << now() - interval '3 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	5 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '5 year'
AND
	meas.meas_date << now() - interval '4 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	6 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '6 year'
AND
	meas.meas_date << now() - interval '5 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	7 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '7 year'
AND
	meas.meas_date << now() - interval '6 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	8 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '8 year'
AND
	meas.meas_date << now() - interval '7 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	9 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '9 year'
AND
	meas.meas_date << now() - interval '8 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y
UNION ALL
SELECT
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y,
	10 as lookback_year,
	AVG(meas.meas_value) as prev_year_avg
FROM core.measurements_t meas
JOIN core.station_t stn ON meas.station = stn.station_short_name
WHERE 
	meas.meas_name = 'hns000d0'
AND
	meas.meas_date >> now() - interval '10 year'
AND
	meas.meas_date << now() - interval '9 year'
GROUP BY 
	stn.station_name,
	stn.coordinates_x,
	stn.coordinates_y]]></relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Sheet 4' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Sheet%205?%5Bfederated.1fzbgox0387g3b10q6k7b0yad0xd%5D.%5Bstation_name%5D~s0=&lt;[station_name]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Sheet 5' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 4' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='Custom SQL Query (klimadb)' name='federated.0qrelc61wm40c0154hr1z0opcrur' />
      <datasource caption='Custom SQL Query (klimadb) (2)' name='federated.1fzbgox0387g3b10q6k7b0yad0xd' />
    </datasources>
    <datasource-dependencies datasource='federated.0qrelc61wm40c0154hr1z0opcrur'>
      <column datatype='string' name='[station_name]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1fzbgox0387g3b10q6k7b0yad0xd'>
      <column datatype='string' name='[station_name]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='station_t (core.station_t) (klimadb)' name='federated.1760s2t1kosibv16u4re61nz1wwg' />
          </datasources>
          <datasource-dependencies datasource='federated.1760s2t1kosibv16u4re61nz1wwg'>
            <column-instance column='[station_name]' derivation='Attribute' name='[attr:station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Coordinates X' datatype='integer' name='[coordinates_x]' role='measure' semantic-role='' type='quantitative' />
            <column caption='Coordinates Y' datatype='integer' name='[coordinates_y]' role='measure' type='quantitative' />
            <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
            <column-instance column='[coordinates_x]' derivation='None' name='[none:coordinates_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coordinates_y]' derivation='None' name='[none:coordinates_y:qk]' pivot='key' type='quantitative' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column caption='Station Name' datatype='string' name='[station_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1760s2t1kosibv16u4re61nz1wwg].[none:data_source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Botanisches Institut der Universität Basel&quot;' function='range' level='[none:data_source:nk]' to='&quot;Canton de Vaud&quot;' />
              <groupfilter from='&quot;Eidg. Forschungsanstalt WSL&quot;' function='range' level='[none:data_source:nk]' to='&quot;Lufthygieneamt beider Basel&quot;' />
              <groupfilter from='&quot;MeteoGroup Schweiz AG&quot;' function='range' level='[none:data_source:nk]' to='&quot;Windguru / Martin Schuler&quot;' />
              <groupfilter function='member' level='[none:data_source:nk]' member='&quot;Zentralanstalt für Meteorologie und Geodynamik&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1760s2t1kosibv16u4re61nz1wwg].[none:data_source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1760s2t1kosibv16u4re61nz1wwg].[none:data_source:nk]' />
              <tooltip column='[federated.1760s2t1kosibv16u4re61nz1wwg].[attr:station_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1760s2t1kosibv16u4re61nz1wwg].[none:coordinates_y:qk]</rows>
        <cols>[federated.1760s2t1kosibv16u4re61nz1wwg].[none:coordinates_x:qk]</cols>
      </table>
      <simple-id uuid='{0B79E6ED-75F1-42E3-A8B1-F08B0FB6FA3D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='measurements_t (core.measurements_t)+ (klimadb)' name='federated.0j3gb050qyikdy187orwc0zrwv6g' />
          </datasources>
          <datasource-dependencies datasource='federated.0j3gb050qyikdy187orwc0zrwv6g'>
            <column caption='yearSnowfall' datatype='real' name='[10y avg (copy)_1811010036948631559]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([meas_date]) &gt; YEAR(TODAY()) THEN&#13;&#10;    [meas_value]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
            </column>
            <column caption='10y avg' datatype='real' name='[Calculation_1811010036947206148]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([meas_date]) &gt; YEAR(TODAY()) - 10 THEN&#13;&#10;    [meas_value]&#13;&#10;ELSE&#13;&#10;    NULL&#13;&#10;END' />
            </column>
            <column-instance column='[station_name]' derivation='Attribute' name='[attr:station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[10y avg (copy)_1811010036948631559]' derivation='Avg' name='[avg:10y avg (copy)_1811010036948631559:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1811010036947206148]' derivation='Avg' name='[avg:Calculation_1811010036947206148:qk]' pivot='key' type='quantitative' />
            <column caption='Coordinates X' datatype='integer' name='[coordinates_x]' role='measure' type='quantitative' />
            <column caption='Coordinates Y' datatype='integer' name='[coordinates_y]' role='measure' type='quantitative' />
            <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
            <column caption='Meas Date' datatype='date' name='[meas_date]' role='dimension' type='ordinal' />
            <column caption='Meas Name' datatype='string' name='[meas_name]' role='dimension' type='nominal' />
            <column caption='Meas Value' datatype='real' name='[meas_value]' role='measure' type='quantitative' />
            <column-instance column='[coordinates_x]' derivation='None' name='[none:coordinates_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coordinates_y]' derivation='None' name='[none:coordinates_y:qk]' pivot='key' type='quantitative' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[meas_name]' derivation='None' name='[none:meas_name:nk]' pivot='key' type='nominal' />
            <column caption='Station Name' datatype='string' name='[station_name]' role='dimension' type='nominal' />
            <column-instance column='[meas_date]' derivation='Year' name='[yr:meas_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:data_source:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:data_source:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:data_source:nk]' member='&quot;ARPA Lombardia&quot;' />
                <groupfilter function='member' level='[none:data_source:nk]' member='&quot;Autonome Provinz Bozen - Südtirol&quot;' />
                <groupfilter function='member' level='[none:data_source:nk]' member='&quot;Deutscher Wetterdienst&quot;' />
                <groupfilter function='member' level='[none:data_source:nk]' member='&quot;Météo-France&quot;' />
                <groupfilter function='member' level='[none:data_source:nk]' member='&quot;Servizio Meteorologico dell&apos;Aeronautica Militare&quot;' />
                <groupfilter function='member' level='[none:data_source:nk]' member='&quot;Windspots Sàrl&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:meas_name:nk]'>
            <groupfilter function='member' level='[none:meas_name:nk]' member='&quot;hns000d0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[yr:meas_date:ok]'>
            <groupfilter function='member' level='[yr:meas_date:ok]' member='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:data_source:nk]</column>
            <column>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:meas_name:nk]</column>
            <column>[federated.0j3gb050qyikdy187orwc0zrwv6g].[yr:meas_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[avg:Calculation_1811010036947206148:qk]' />
              <size column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[avg:10y avg (copy)_1811010036948631559:qk]' />
              <tooltip column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[attr:station_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:coordinates_y:qk]</rows>
        <cols>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:coordinates_x:qk]</cols>
      </table>
      <simple-id uuid='{719ADD1C-A6B1-4490-8C02-26E7B74A7C3F}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='measurements_t (core.measurements_t)+ (klimadb)' name='federated.0j3gb050qyikdy187orwc0zrwv6g' />
          </datasources>
          <datasource-dependencies datasource='federated.0j3gb050qyikdy187orwc0zrwv6g'>
            <column-instance column='[meas_value]' derivation='Avg' name='[avg:meas_value:qk]' pivot='key' type='quantitative' />
            <column caption='Meas Date' datatype='date' name='[meas_date]' role='dimension' type='ordinal' />
            <column caption='Meas Name' datatype='string' name='[meas_name]' role='dimension' type='nominal' />
            <column caption='Meas Value' datatype='real' name='[meas_value]' role='measure' type='quantitative' />
            <column-instance column='[meas_date]' derivation='Month' name='[mn:meas_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[meas_name]' derivation='None' name='[none:meas_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
            <column-instance column='[meas_date]' derivation='Year' name='[yr:meas_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:meas_name:nk]'>
            <groupfilter function='member' level='[none:meas_name:nk]' member='&quot;hns000d0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[yr:meas_date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:meas_date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:meas_date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:meas_date:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:meas_name:nk]</column>
            <column>[federated.0j3gb050qyikdy187orwc0zrwv6g].[yr:meas_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[avg:meas_value:qk]' />
              <text column='[federated.0j3gb050qyikdy187orwc0zrwv6g].[avg:meas_value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:station:nk]</rows>
        <cols>([federated.0j3gb050qyikdy187orwc0zrwv6g].[yr:meas_date:ok] / [federated.0j3gb050qyikdy187orwc0zrwv6g].[mn:meas_date:ok])</cols>
      </table>
      <simple-id uuid='{4A8FC856-899E-4809-B2D8-3EEB7B682386}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current yearly snowfall average compared to the 5 previous years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (klimadb)' name='federated.0qrelc61wm40c0154hr1z0opcrur' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrelc61wm40c0154hr1z0opcrur'>
            <column caption='5y diff' datatype='real' name='[Calculation_1811010036963237896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[prev_year_avg] * 100 / [prev_5_years_avg] - 100' />
            </column>
            <column-instance column='[station_name]' derivation='Attribute' name='[attr:station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[coordinates_x]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[coordinates_y]' role='dimension' type='ordinal' />
            <column-instance column='[coordinates_x]' derivation='None' name='[none:coordinates_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coordinates_y]' derivation='None' name='[none:coordinates_y:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[prev_5_years_avg]' role='measure' type='quantitative' />
            <column datatype='real' name='[prev_year_avg]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1811010036963237896]' derivation='Sum' name='[sum:Calculation_1811010036963237896:qk]' pivot='key' type='quantitative' />
            <column-instance column='[prev_5_years_avg]' derivation='Sum' name='[sum:prev_5_years_avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[prev_year_avg]' derivation='Sum' name='[sum:prev_year_avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0qrelc61wm40c0154hr1z0opcrur].[none:coordinates_y:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0qrelc61wm40c0154hr1z0opcrur].[none:coordinates_x:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:Calculation_1811010036963237896:qk]' max='100.0' min='-100.0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:Calculation_1811010036963237896:qk]' />
              <size column='[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:prev_year_avg:qk]' />
              <tooltip column='[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:prev_5_years_avg:qk]' />
              <tooltip column='[federated.0qrelc61wm40c0154hr1z0opcrur].[attr:station_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.0qrelc61wm40c0154hr1z0opcrur].[attr:station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Snowfall changed </run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:Calculation_1811010036963237896:qk]>%]]></run>
                <run bold='true'>Æ </run>
                <run fontcolor='#787878'>over the last 5 years.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>5 previous year avg was&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:prev_5_years_avg:qk]> m]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>this year average was&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:prev_year_avg:qk]> m]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
                <format attr='mark-transparency' value='155' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qrelc61wm40c0154hr1z0opcrur].[none:coordinates_y:qk]</rows>
        <cols>[federated.0qrelc61wm40c0154hr1z0opcrur].[none:coordinates_x:qk]</cols>
      </table>
      <simple-id uuid='{524B316A-AFDE-4CB7-96E9-7D48E2A328E5}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1fzbgox0387g3b10q6k7b0yad0xd].[none:station_name:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (klimadb) (2)' name='federated.1fzbgox0387g3b10q6k7b0yad0xd' />
          </datasources>
          <datasource-dependencies datasource='federated.1fzbgox0387g3b10q6k7b0yad0xd'>
            <column datatype='integer' name='[coordinates_x]' role='measure' type='quantitative' />
            <column datatype='integer' name='[coordinates_y]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[lookback_year]' role='dimension' type='ordinal' />
            <column-instance column='[coordinates_x]' derivation='None' name='[none:coordinates_x:ok]' pivot='key' type='ordinal' />
            <column-instance column='[coordinates_y]' derivation='None' name='[none:coordinates_y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lookback_year]' derivation='None' name='[none:lookback_year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station_name]' derivation='None' name='[none:station_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[prev_year_avg]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_name]' role='dimension' type='nominal' />
            <column-instance column='[prev_year_avg]' derivation='Sum' name='[sum:prev_year_avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fzbgox0387g3b10q6k7b0yad0xd].[Action (coordinates_x,coordinates_y)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:coordinates_x:ok]' />
              <groupfilter function='level-members' level='[none:coordinates_y:ok]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1fzbgox0387g3b10q6k7b0yad0xd].[none:lookback_year:ok]' direction='ASC'>
            <dictionary>
              <bucket>10</bucket>
              <bucket>9</bucket>
              <bucket>8</bucket>
              <bucket>7</bucket>
              <bucket>6</bucket>
              <bucket>5</bucket>
              <bucket>4</bucket>
              <bucket>3</bucket>
              <bucket>2</bucket>
              <bucket>1</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1fzbgox0387g3b10q6k7b0yad0xd].[Action (coordinates_x,coordinates_y)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fzbgox0387g3b10q6k7b0yad0xd].[sum:prev_year_avg:qk]' scope='rows' value='Yearly average' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1fzbgox0387g3b10q6k7b0yad0xd].[none:station_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.1fzbgox0387g3b10q6k7b0yad0xd].[none:station_name:nk] * [federated.1fzbgox0387g3b10q6k7b0yad0xd].[sum:prev_year_avg:qk])</rows>
        <cols>[federated.1fzbgox0387g3b10q6k7b0yad0xd].[none:lookback_year:ok]</cols>
      </table>
      <simple-id uuid='{EB8C1ABD-38AF-4BF4-9D4F-BC84817A008F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98734' id='8' param='vert' w='99318' x='341' y='633'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='800' h='63291' id='11' is-fixed='true' param='horz' w='99318' x='341' y='633'>
              <zone h='63291' id='3' name='Sheet 4' w='46444' x='341' y='633'>
                <layout-cache minheight='143' minwidth='100' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='empty' _.fcp.SetMembershipControl.true...type-v2='empty' fixed-size='1234' h='63291' id='12' is-fixed='true' w='52874' x='46785' y='633'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='35443' id='17' param='horz' w='99318' x='341' y='63924'>
              <zone h='35443' id='19' name='Sheet 5' w='46436' x='341' y='63924'>
                <layout-cache cell-count-w='10' minheight='43265' non-cell-size-w='53' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='empty' _.fcp.SetMembershipControl.true...type-v2='empty' fixed-size='1234' h='35443' id='18' is-fixed='true' w='52874' x='46777' y='63924'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='23' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98734' id='22' param='vert' w='99318' x='341' y='633'>
                <zone fixed-size='280' h='63291' id='3' is-fixed='true' name='Sheet 4' w='46444' x='341' y='633'>
                  <layout-cache minheight='143' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='35443' id='19' is-fixed='true' name='Sheet 5' w='46436' x='341' y='63924'>
                  <layout-cache cell-count-w='10' minheight='43265' non-cell-size-w='53' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1A77127A-93F2-400B-87F7-B0966C82A459}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1760s2t1kosibv16u4re61nz1wwg].[none:data_source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1760s2t1kosibv16u4re61nz1wwg].[none:Calculation_1811010036935446528:qk]</field>
            <field>[federated.1760s2t1kosibv16u4re61nz1wwg].[none:data_source:nk]</field>
            <field>[federated.1760s2t1kosibv16u4re61nz1wwg].[none:station_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DB67C620-C84A-479C-8884-C36B7BC515D5}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j3gb050qyikdy187orwc0zrwv6g].[avg:meas_value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:meas_name:nk]</field>
            <field>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:station:nk]</field>
            <field>[federated.0j3gb050qyikdy187orwc0zrwv6g].[yr:meas_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B421A8C0-9B7B-437F-8AA9-527F650ABD27}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j3gb050qyikdy187orwc0zrwv6g].[avg:10y avg (copy)_1811010036948631559:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0j3gb050qyikdy187orwc0zrwv6g].[avg:Calculation_1811010036947206148:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:data_source:nk]</field>
            <field>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:meas_name:nk]</field>
            <field>[federated.0j3gb050qyikdy187orwc0zrwv6g].[none:station_name:nk]</field>
            <field>[federated.0j3gb050qyikdy187orwc0zrwv6g].[yr:meas_date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4B5A8BF2-E076-4458-B4B4-A598E63945CA}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1fzbgox0387g3b10q6k7b0yad0xd].[none:lookback_year:ok]</field>
            <field>[federated.1fzbgox0387g3b10q6k7b0yad0xd].[none:station_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{2AC9E808-BF91-4360-A2C2-D884A3B1CE17}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:prev_year_avg:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:Calculation_1811010036963237896:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qrelc61wm40c0154hr1z0opcrur].[none:station_name:nk]</field>
            <field>[federated.0qrelc61wm40c0154hr1z0opcrur].[sum:Calculation_1811010036963237896:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47A0AE32-78BC-4C6E-8E04-18BD93BD7574}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{5604A585-0D7F-48FB-8253-249BB8E2F484}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9R5MceZrm9/OI8NBappZIAAVdQKHU7PK2ZrukcXngt+FpbvwgvPFEM9rY
      cGjLnZmenunp6iqgUAWVWoXWykW4R7jz4JGJzEIiwuFZaFR247kVOv/tIdw9/Pd/3vd5BdM0
      TT7pk/5K5frYL+CTPulj6tMF8El/1fp0AXzSX7U+XQCf9FetTxfAJ/1V64NcAKZp8mlz6ZOu
      gj7IBWAYBrIsf4j/60/6pF9Vno/9Aj7p/XS8v029PyIoqIixDPVSkdvXlni2dczjrx4hCsLH
      folXSp8Y4IopmYjRbLWp9RTKx/uMDI1up4Pc2OV1QfrYL+/K6dMFcMX0/Q9PyGbS+EydUCRG
      vVJjIHhx+9Ks5UIf++VdOQkfohRiNBqhqiqh0Kcv5JN+2/r0C/BJf9X64BeA1OsxcrDu+GCH
      aqMNQK/Xc3Tso6Mj1F6DUr371v9m5/+zW6/QUbRz/ybLMu12a+raWrGAoo/YPziw/XpPNFL6
      yEPnP8wn780Y9Ogo0z/9odqlVOtM/JvBYHDmv0zyh3uUa80JfzPWSKcnq2/9s65KvH71it74
      8z27dtJ3c3x8TKvdnvhaGSr0FP2tfz7c2yZfqnL2k/3gu0BKv0+1mqfSGZH0g8vvIxJIoMot
      Xh2Uubk6gyGIBIJBctksrvEmRr/fxy16+fu/+wPzKyt4BBd+n8DI9BIP+2l3a7RVgZDLTTSZ
      wCe6yWQy547daVTRtTAjIcDPP/w76xsbuF2gagaGJuMLx1lfWXzna29LMqasU+43Eb0BVNNN
      PBJEH6jE44mJ73tk6BQPdqhLQ+Snf2ToCZFJpoikMkT8kz/2kSpxWOuS8LlQpR4DU6RxvElm
      9T4byzNTPnGTfreJLA0Y9fPUjDTZmI9cLvPOu12l2mJgQrmsYJoGvU4TwS0SjafoVKoobhGt
      2+Duw8f4RTcA2kBD8Kr8t7//O+ZWNjAMDUVRySZjvNw+ZGN9hX5fIhoJ0u5JzM2vMJOJnx6z
      UWuwduMa+682MUU/vXaTVDqNquoI6Ii+IMWDbZK5BfzRFNeWrPfdb1Zp9BTa9TIjwUMoEKTd
      apCvdlhbzNCTVBIhL9X+kKjXxV6xxsbyHOmZBbyBMENN4fs//DOeYAqfz/dhfwGM4YBqu4fL
      JRILB0jn5okG/ZRLx0iDITPpJMFYiqW5NI1G5/TkB8jOLZJOxlhcWSUWDiC4XETiaZJhkUKp
      Bm4f0aCf3Ow8PlNmgO+t48/MzIBLxOsyyOZyuMQAM5kkgiCQmZknEZnAKOYIuS+hDDQ0TcPt
      8jC/sIBLEPD7/VPfuy8QxRRcLM6kEQNhItE49XqFkM897VPjoFgn4hlRKNUIx5KkE1FSmVmS
      selM1apVGCJSq+QZCn5mMlFq9eaEL9pE01SknoQsdWl1+uiazkAfUioc44vEMHSddDqJcGaN
      RxTRBhqzi8v4XCa43OSyGQSXyOraKtFYksXFRWKRMF7RjWkM6fd66CPr/huNhdl+vUU4nkAQ
      3GQzKQRBAEGwTkyXQHpmgWQiyvzsm4s+t7CMa6gBAi5PAFnqEY/HWV1ZIpbIsLiwSDgcxucR
      cIt+1laWiSdSxCNB+p0mA8NFIpkhl04gCB8QghVVJRgM2vp7VeoheIP4xGknx8XqtNvE4vHp
      f+hQuqYher0T/2ba7rsx0ugpQ2Lhtz8T4QPu3StSF8EbOr1zT5VpUsgfkczNE/Be/Ev1y1NG
      1zQ8Xu/Uz+Cy+hC1BR/sAvjvB68ZOjihTdNk9JGqKLxu5z+IHodLo6Kfx9llx8f9GKoqPX5u
      Fv/sx1V0g97AcLRWdAsExLe/pHOXuNSs8PNOnnQ2zfrSLP/6u39jfWOdw2KLjaUE+5U+nkEb
      Agke3Lnp7F0Ao+GQ3RevuH7/Lu1Gg/zOPum5GQaKwtLGtYlrdV3n8PUW1+7epl4qUzkuEE3G
      Gagq1+7cnrhWGww43t5l/c4tKsd5ivuH3Hz0gPLRMaufTX4/A1XlxZ+ecPerL6gVy5SPj4nE
      4+iaxq1Hn09cq8oKL75/wv1vv6JeqtBpthC9Il6fl1s3Ppu49iqq02xxsLnNva8fc7yzh2EY
      KJJMeiZHZm4yw7TqDfJ7+9x5/IjDrR0El4t+p8vM4jzBZHri2ma5QjWf5/rDzzna3MLtcSN3
      e6TnZplZmLtwzblLQpH69BWVYiGPaeoUixV+/PEnhrrMkxf7fHHvJoVCnlK58p4fyXm5PR58
      gQAAjXKVeDrF9rPnKNL0+iFRFPH6ref9brNFr90mnkohiuLUtV6fD9FnPcpkF+aJJhMU9g5s
      HbdeqrCwtkqzWmN2eZFoPM7SxjqhSGTq2kqhyNK1dVq1Ov1uF4/oYTgcosjK1LVXUbVSmczs
      DHKvj6ZpKLJMIBSk3WxOXduoVImnUqiywnA4ROr2CMeiNGv1qWtD0ShSpwOmSbfZpN/u4A8F
      kSfsKp27ADyBIOJIxkRg96jMvYdf8PDeTTRFZm4mxfc/vSYWixEan7xONdR1jnf2KB/n8fn9
      VPIFFjfW0NQLttF+IW0wIL+zRzVfQHC58Pp97Dx/wWg4fbtvoKgc7+xRLRTptdukZ2dwuV0T
      P6ATRRNx9l69xiOKdJotsgvztGp15lenP77EU0l2XrzE7Xbjdrvpd3voA23ququqSCxKfv+Q
      4XDIaDgErDu7PzB98yAUCVPJF9A1DV3TcLnd1MsVAqHpPNltNhF9PvqdDqLXi+ByofQlBNe7
      n08/GAP84+EmQ4cPxkPD+UtyulLAOQMIgFN8iHoDfJFZcrb4I+kqMoDXLeDzvI3pH8wH+Ca3
      /GcvhVCHOv9a2XO0NugR+Sa39iu/ok/6NeV1C8QDznYKDdPkolv9VAhe21jnqNgiGRFo9keE
      PDreSI4b61frrgXW49PP3/3AnccP6bU7VAtFQpEIJnDr1l8ejH4snYXgo509zFMIzpKZm524
      tlVvkN/d586X5yE4tzBPIpuZuLbdaCD3+sytLHO4tU16ZoaDzS3mVpaJpVMXrrkQggtnIPjZ
      jz8x1CUOj/JUS2UOCgVcl9gu/JhqVussrK7QKFdpN5oEw2FkSUbX/nKfxz+GzkKwfg6Cp5eQ
      NCrWpsgvIbhVnw7B8VQKXbNKIBKZDL1Oh1gyQaNSfeeaCyFYeAuCVeIzS/zX//k/k47FMEbO
      nsM+tiLxGHuvNhF9XkSvl2atjiBgC6A/yb4isRiF/UNGo+HpZ2tB8PTNk7MQPNR03B43jXKF
      oI3H6UalSmHvgE6zRenwiGalSrVQIhR9907dB4NgWVEI2iD3iyQ49BTVkc6/lZ0ygJevciuO
      1oLz1wzgumJdXB8LgkeG6XiDxDQtDvilPhgE/79HewwcPir5He4eGabJwGEVpWnq7DRfOFrr
      cQlkI9N9iIsUFf18ecWc4I+lrjqi2H27ytOO/B6B8AV1WOcugH6jzPPdwnkIvrbGUalNMiLQ
      6A/JJqKsr687ewdndLy1RWZ+gYGqUNrbJ5ZJo6kDlm/emLhOGwzYfPIjq7duYowMykdHBCMR
      BorC6u1bU4978PIV8+trdJtN6sUSoWiU4VBn+eZ0Z3v/+QsWb1ynUSpTy+cJx2LomsZnU5xg
      RZZ5+f1TywkulmnWaoheH16fl7u370w97lXTLyHYMAxUSSY1kyU7DYJrdY73Drj7FgTP4Y5e
      DLInahaLVA4PuP74S4rb2wx1DdMwSczMMLtw8XHP3WoHskxfVinkz0DwTz+fQnAlX2T36OD9
      Po0LNFAUqscFFEmiVa0RTafoNVuYxnS2EL1e4pk0IHC8vYM+0Iglk1OL1QCkbo9aoYA2GBCK
      Rul3OsQyaTzi9LX9dpt6schQ18kuLhCOx5lbXyM44fnyRNVC6dQJjqdTeP1+Oo0mHRtQeBX1
      SwhWxxBs5/02qjUSF0JwY+raxOws4XgCl9tNdmWFYDSGLxhA6dt0gt2BAKKhIAhvIPjR3c/Q
      FJXEzBKrS1li0aSNj2CyjJGBRxTpt9v4/H7qhSKi349+UUPFLyR1u5QODlFlmdTsDENdZ/f5
      i1PHcaJMA7fHQ7fZpFWr4/X52H/+AsPOWqwSjk69Qa/VIj0/R6fRYGbZrhP8CrfHw+7L1+gD
      Da/fZ+uivYqKxGIUDs5CsPAeEByhki86guCBJBHPZVH6ffrNJsnZWVRJwuV6t3fwwSD4/9p8
      gTrBgn7nCxKcM4Bpmii68x2qkUPAEt0uMmFnOBXzBvgi8+6mnMkSPgpAfywIbspDih1nW9Z+
      0UXYO6Ua9NeU48vKBLfDL9UAx6XUhmmiO9wNHZmGY/iujWT+sbjtaG3cG+DRFSujuIx6gyF7
      TWcFhDG/h0z47V/cCyE4lUlxbXnuPASHodEfsZKLsVds8OWXXyC6nN99LAieR5UVint7RBJW
      i+HS9Y2J67TBgNdPnrJ26zM0dUDx4JBkNkMwEiGamv54dgLB7VqNXquNRxRRJYlrDyeD7FDT
      2H32jPX79+k0GrTKZbzjx7YbDx9MXKvKCqWDQ1Zv3aSwf0CtUCSeSZOdmyMUDU9cK/clXv7w
      Iw//4zeUj/NI3R6C4CIQChK/4bwk/UOq02hysLVzDoIVSSI9k3t/CBYE+l3LCcYXu3DNUBvQ
      PDogs36d8qsXzN66g64qtIsFhqpCJDtD7H0guFgovA3BxwUqhSIvDwrczHrYLDprVIcTCM6j
      SDLheIxAKIQqSxT3pu/hi14vibQFwZFEnEAoSCKbZaBMvzNI3S71MQSrskLt+JjMwjyhWHTq
      2nqhwEBR0AYDIokE3kCA3MoKwej0tf5gALdo3WvmVpaJxOOkcllUdfprLh/nWb6+TrveQO5L
      1jMiIEu/3RCsWrnyFgQHQyFnENzrE47FJkKwx+vDLXrplAoonRamadI42EftdvAGQ8gTQgwu
      hGCXy2VB8KMveHTvMzTVguC1pRy5eJSfj7qs5ibfuSbJMAxEnw+p0+FocwtVlgnH4qSm3B1g
      DMGHR6iyzMHrTVRFoXx0TOU4b+vYHq+XXrNFMBIhlkkjd3tkl6Y/RsSyWTweD/12m/zWFvpg
      QK/RsLVW7vc53tmjXirTrjeYWV6kdHBENT/9OTqRSbPz/BUulwuXy4UqK6iKgnsC2H1sReJv
      INgYjhDeF4ILYwjWTyC4OhGCdVWhdXTAUFUxRgZKp43H68UY6sitJt4Jx/1wEPz6BaoDI0wA
      ghe0rtmRCXQHzh7kTdNEc8gAogsyYWdGmEuAgMfZyRz3Bfg87RSgnetjQfBRS+VZ0dkvXyzg
      IR2awgC/pqJ+NyEHPcGGaSLrzq/JeMDZWzIME9nhDpJbcF7OEPf6+XZ2xdHavzZFfB7WUs7K
      a0JeF7ELSqknQvDv//lfmV9eZn/vgK+/+ZyfN0us54IclNrcf/iAC3aVbGk4HPLzv/+JGw/u
      WuZUqUwoEqHdaHD36y8nrj3rBCt9iVatRjSRYDgcsrA+uZ5/oKhsPv2R9bu30QcDFElGlWVE
      r5e51dWpr3vv5+cs3bxBu1ajUa4QGP8sr968PnGdKisUDw5Zu3WT8tExrXoD0WsV5MXv/OU5
      we0xBN//+jFH27sWBMuyLQhu1urkxxB8sLWDSxDojXuCbTnBB/tc//IrSjs7uDxu1L5EYiZH
      aGn+wjXnIViR6cvKKQSXSlXSM/O4PW4OXr6kUC3xYueIoKChXaIgtNduM7u8SK1URpUVqoUS
      6dkcERvRJqLXSzydQkBAlWVq+QL7L16i2oBCr99HLJVEQCCeTqMPNFRZIb8zHb57rTa1QpGh
      phFNJvEF/ASjEasHdYr8wQAej3WvCcdi9NptOo0mvdZfphNcL1fInkCwrqMqim0Ibp6B4NEY
      giPxyRB8osTsLOFEEpfbTb/dQu52x05w/51rzkOwP4BoqKcQfP/RFwTMHpn5dXTBQ85rEonF
      KDfejhp8H4XCEY62dvAHAgTCIWKpBIokM7c8HSilbpfy0RGKLBMMh4mlU8yvr9mq6e82W1Tz
      RRSpTzVfoHR4SCgSITN/cWLAWQkCiD4v3WaTo9eb6OqAXqOJx4aba0HwLvVSmVbdcqC9/jcN
      +n9pegPBI4zRCEEQaDeaDiHYQ6NSJRi26wTnUPp9RJ8Pl8v98Zzg/37wmqEDuDMxkRz+vAiC
      4DifxzBBdkjBbpdAdGri28WK+wJ8PePMzBIAl/Dnb076WBDckocUHDrBIZ+bmH8KA/yaMk1n
      DeqG6dzNNQ3DuZtrmHRUZ4s9LgHRYem3NpL5p09OsC3phonkdKPCLRAxHULw3u4BM3NpOh2V
      RNRLX3Px5cN7zt4FVjDWzvOX3Hhwj2a1Rn53j0Q2g9KXuHZvMhRq6oCtpz+yevsz5F6fwu4u
      iWwWl9vNwrXJZdoDRWH7x2es371Dv9OlWS7jDwZRJJmNKU6w3O1y8Pxnlm/dZqAotCplvD7L
      Cb4+bW2vx85Pz7n56CHteo1us4UvEMDr8zG3PHkbU+73LSf4P3xD+bhAv9tDcAljJ/i32cfc
      bjQ52Nzm/jdfvoHgcTBWdt4OBO9z98svON7dJ5ZMkN87IJXL4ErkLlyjDwbUDvaJZjLUjg5Z
      uf851f09EATUXo/4zCzRJTtOsCLTuwCCPaKbZrlAo1LhKF+kXLl8MFZgnBsajkbpd7vEUym8
      vrcDbn8p0edFEEBTVdJzs8RSKVRZZmiDAbx+P4ZhoA00eq0W/XaHmZVlwjac4GA0SjSdwR8O
      E04k8PkD45Lb6WsDoRCaqjIa6kjdHh5R5Hh7B8UGuJePCyxfv0a70USWJASXgIBgK8zrY6le
      rpCdmz0PweEQHRvQb0FwGlVWSGYzaIMBwXAIqfvuygPR57MMzkaDcCKJrqqMhkM0RcYfDiO1
      3h3I9RYEe82zEPzYguCFdeLxBJFIiOz8Kv/1v/yn9/g43tZQ1zne3aNynKdRqeDzB9h9/pKh
      Pr3bR5VlDMNElWSkbpdELksoGkWzUUqt9CUEQUDp93F7PHj9PjqNBjkb8G2aJr5AAH2gUtje
      QhsM6DebZGw4wf1OF9Hrpdfu4PF4kPt9ZpYWTxu4J+nUCR6Hag0UhYGq4Hb/dp3gaDxG4eDo
      bQgOTofgcDRCdQzBpcMjigdHSN0ebs+7n9Y1RaF2sI9pmrQrZYaahjEa4hJc9JsNfBNCmj8Y
      BP9/+87DcXuX2GN1+nYM07Q1TOIiedwCyaAzJ9jjEi6EMztKeIM8SC84WnsZfSwIrvV1DlrT
      b3QXKepzkwq9/R19MAgWPQKuC5K4psk0BRIfIaXZNCHrvLwJp4WxVzEd+mMpExYdl5y8a1Pm
      PATXSzzfK74bgtsq8aiXvibw5aP7jnMQhsMhP/3hO248uMdAUTja2SOaiCMIAis3Jruquqbx
      8x+/57OHD+i2Whxt75LKWRC8cmNKKbU64OfvvufO40d0220rMiMSxgRWppRhq4oyTod+TKtW
      o16q4PX70VSV248fTlyrSDIvvn/Cg2+/onYmHVr0ernz2fQ+5qumUwj++kuOds5CcJbsFM+l
      WauT393n7ldfcLC5/SYdemGe9OzFEHyierlC+SjP7ccPrfgbr5d2o8n86jLJzMWhWuchWFUn
      Q3C1wnGhSLFYvNSwgl6rzezyEvVSmWgiTjAcRpWtC2GaOo0m8yvLNMoVsvNzpyFKdoywZq3O
      wtoqjUqVTrNFKBJGkRVb7NEoV1lcX6NVq1lubqfD4voKkfjFNepnVS2WWN64RqveQOr1EL0i
      o9GIgfr27Ky/BJ1CcP+XEDxlthdjCM5YEDwajZBPnODGdCe43WgSScTRBgPrUbrdJpFO0qzW
      3rnmFxDsx2cOcLvPQ3D2BIKjYXLzq6zNZRheYopFKBrhaHsHfzDA3qtNFEkiEo+Re0eG+1mF
      YzEOtrbxBfz0O13SMzlCsYitfuJoIsb+6y3LifX5aNUbuFyCraCvWDLB3qtNPKJIs1o7XT9n
      Ix06kU6x8/IVHo8Hj8eD1Osz1PUrlwdkV9F4/AwEGwiCi3ajebrzN0lnIXioD/GIlhMcCk9/
      Pg2GQzQqVTR1YPVd+/xUCyXCE3bqPhgE/+5o0xEEg4nT4DlBsCozneoSodS4HULAVWSAjwXB
      pmle6sljajjur6mR6eyEMk1Qh853gbyXCNXSHPb1ugSIOCyF+CT7kjSDlsOdOr9HuHBAoftv
      //Zv//bkP3r1Ek+fbyEPBiRjIX7/T79jZJr88P1T/H4XmwclTLlFXRqSmNDLapomB50G5jt2
      c4bDIT/+678TTSboNBq8+NMTUrksey9fk8plJ8bfaYMBL777nmAkQr/dYf/FKwaqSq1QJJnL
      TrwTa4MBe6+sY9RLZfZevra4p90mkohP/OVRZZmX331PNJWkUSqz8/NzpF6P6nGezNwsvgkX
      niJJPPvDd2TnZ6kUShT2D+g0WvS7XbKZDPOhDzfg70NIGmpUlXcbU+1Gk9c//kRufo7D7V2a
      tTqlw2NM05iY0wkWA2z//JLs/BwHm9t0Gi3y+wcILgExEEKdcJNqlssUdqzKgOLuLm6Ph8MX
      LzFNk2gseuHN8dy/6IMxBBeLb0HwzvYhX9y7ye5RnoPt19M+o4nqtdrMjSE4PTtDIpPmcGsH
      eULZ6olOgrFcLoFw7KyLPH36iNfnwzf+u+i4nzi/u4fSn+7I+vx+oilrxGpuaZFoMsHC+hrh
      2PSTt1os/wKCvYyMvwYIlhjqOoP3geBa/TwE9y0Ibjemj1dS+n0rDQ6IpdMMNQ1fMIg64fs9
      dwG4fBYEe9xuC4K/OIHga6wsZvj+2UtEtwe3OL1kYZLeQHAQqdcnmc0QikYYDodTn/Gkbpfy
      4TGKJNOsVPH5A+y9fGVrJ2egqBzvWiOS9l9vMVBUcovz6DbWtuoNmuUKcq9Ht2WNSOo2W8yu
      THeCE+kUu2cgWD6F4KsZMz9N0XicwqFTCI5SLZTQNY3Re0JwIBzGGI2QOh2qx8dUjo5QpD6u
      CVXJv7kRSSagOqz4EwRrHKYTXYY93IJAxOfsZI56Azx02NdrjWb6819EZbnLk1rB0VqXgOPK
      2f5gREO2l+L3S/3Zg7EGQwMnOb6maQVcOZIJpsPt2eHIpNp3ljzscQmYOHMoJU3in/WrVQ69
      WZb43/9hx9Hau/MR/tdH09M/LpKkGRQ6zr6jmN+N64IE73MXQK9e4sVekWQ6ycbKHL//538b
      O8H7fHbrGqWGTNSj09XcPHpw27kTrOu8+v4JSzc2iCYSvH7yI7FkAqnb5dq9yWXWVk/wU1Y+
      u4kqyRzv7BJPpxG9IotTZgyf9gTfuU0gHGLr6TP8oSAej4eZ1cn9xHK3y8HPP7N0+zaaotAq
      l/GHQrg8bhavTT6u3O+z/ewnbj78nEa5chqMlZmbJTIFCqVen5dPfuTRf/iG0i+DsW7+tsqh
      RZfA3dkk1b5KJuTnWanJQiyE1+1CdLtoK9O9mma1ZvUEnzjBZ4Oxwhf3BFvl0HtEM1nqR4cs
      339AeWcbTZYR3G7CyRSxtYtvFG9DsCSPIXh4BoI97G4f8sXd61TqfYbdJpcZKuT2eEhkMrhc
      LooHh3TqdaLJJF7/9GpBqyc4jcvlIj03SzydYqhrFHanu8inPcEugfz2Lv12x5pla2NkaTAa
      JZpJE4hECMfj+IJBDMOwVYbtDwaJJhIgCMyuLBNJxEnmsrYguJIvsDIuh1YkGcHlsipa5d9e
      ObRumDTkAQHRjcflwiVYkzfdLoHBcETYN/1X8m0IlojE4xMh2CqH9tFvNAglk+jqgPTSMoFY
      DF8wxMBuT7DL58eHhjiG4Ae/hOCft4gGXejeAJfpZlUlmcL+Pqqs4BFFPKLI3ouXDPXpJ5PV
      E2xBsNTtkszlCMdiZBYu7vo/q26zRa1QQun38QUD48aSkK2T2DRN/MEQuqpQ2Nmx6vt1HWz8
      DjbLFdr1BlK3S6fRZGZ5ifLhMbXCdDMpmc2w++JsObTKQFVPm+x/Swp5PSzEQgyGBiYmUb91
      lrgFgbBPZGCDscLRKNXiGIKHQ8t5nwLBmqJQPzqwcqEqFYaahtRuk5ibR+1PLqX+YBD8/+y+
      RHMIO8alxg05W3cZBhBdAmmHVYoel0DU5+xkjnsDH6Uc+l/2S/ztf3viaO3tuTD/y4MZR2sr
      PZ3dhrNy6HjAfWEl6Qe7jegG6A5PRkcVFGM5ra9xuyDodXZgj8t5ml3M6+ebmRVHaz+WbsyE
      +d/+x8nc8yEkugXCDnfb/KJw4Q7hRAj+l3/6VxZWVtjd2WdmLk2vr5NJxVjd2LjUlaNrGptP
      nrJ04zojfUhxb59oMoE2GLB+d0pP8GDA5g9PWbl1k3A0yubTZ0RTSYzhiIVr04OxXj95yrW7
      d1AkicpxnlgqSTSRIDQlk2igKOw8/ZGNRw/p1hu0KhULgt1ulq9P7kVWJImXPzzl/jdfUT7K
      o8oyJjDUdL7+5uuJa6+i2vXGaTDW4dlgrFxuasFjs1rjeO+Ae199wf7rbVyuNxDsjqUnrm2V
      SjTLJVbvP6C8u4MxMtAUmUA0xsati8vdJ0JwuVwjPTOP6LUqGFdiOr9/usNlh4p6RBG3242m
      qIRiUaRel26zRb893SkUvV5iGQuC83v7dJpNCjt7tlxkr99nhWq5TpKlQySzWQbKdBjVVJWh
      rmEMh9Zr7nYxRiNb/FArllkaO8EDVaWwf8j8yrKtUuqrqHql+sYJHg4ZqCqhcJiuje+3WauT
      HEOwYdiD4BNJnQ5yt4tpGERTaXzBAPGZGaKpdyfKXQDBOqLnBIK/JGD2yC1eI+TzsFMb8fn1
      eS5rvWgnTcuqSrNcwRcIWLN7bZQzSN0ulTEE+/x+PB6R9NysrRFJFgQXUfp9jja3GSgK5aMj
      qvnpydIWrHuROl069Tpev5/hULfDwMTTKfZevsbj8RCORcnMz9Jtt5mz4SJfRUUTcYpjJ9g0
      DFwuF+1my74T/EsIrtYIRaY7waLfh9fvR+n1KGxvMRoOMUYjgrF332g+GAT/3w7jfjIAACAA
      SURBVFsvGTh0ZZ1WdIKt8/FCGaY1htOJPG6BdNApyPr5+ooxwMcckeQ0GCvscxOfFo77a0rW
      RihOZoQBPodx4aZp4rCiGQHnEecCzkswnPYR/DUq6HUxH3O2AW+YcNEu7HkIrhV5sV96JwR7
      fFG8WhN/7ibz6elZje/SaDjk9Z/+xNrduyj9PvmtLTKLixijEQtTXFVtMOD1D09ZvXUTfaBR
      3D8gkc1gGgbzNtKht57+yNqd2/TbbbqtFqLXi9zvc/vxF5PXqirHO7tcu3MbwzB4/eRHAqEQ
      breb5evTnGCJFz885fNvv6JWLJ/2BLvcbu7fdR4w9ltVq97g8JcQPA7GmgbBjbETbEHwFoLL
      hdTpklucJ5LJTl5brlA5OubmFw853tq22k5lhXAsyvyGHQjWtDEEF96C4FaliMvl4rBYYevl
      8/f8SM7LCi1SGeo6iVyOWDpD7Tg/sWz1RG+cYDfheIxgJExhb98eBPu8xFJJXC6BgapSPc6T
      XZi3lUrt8/vxeq0q2INXmxYEGyNbvci1UpmVk3Lofh/R5yUYCdPvXC5k+LeqxkUQHLEHwa1z
      EGyg9CUiCXsQHIpGkXo9ME3imQyBUMiqFnhHQzy8BcE+fOh4PeJbEJxbWGFjZQZfIIo/4OxR
      4USCIOAPhVB6PZR+n1gmTWZhntFoOshK3S6V42MUSeJoaxtVVsguzI/n0U5Wr92mViwh9/sE
      I2ESuawVUmUjGEuRZfJ7+9SKJYLRCC63m6FmD4KtcmgLgkVRRO5LdFttRBtJeFdRF0Fwp9ki
      ELIBwbGzEDzC47UPwd1mE5/f6hU/fL3JUNcxRiPCE3bbPhgE/58vnqM4MKUEwfmUF3AerGux
      h7PncUEAn0PXO+a9mj3BPzWclUODdQN0IlU36DsdgSXARXerDwbBMb+boJN4dNNEv0R3utMP
      1zBNuqqzQmyPC3xB53PNrppGhjmxNXGS3AJ4Hd5oZM2g2HVWrhL2uUhckN53IQQnUgmur86f
      geA9cpkwudV7bL/8iYVsBCGQY3l+sjP3Lg11nZffP2H5+gaGYXC8s2tVAEqyrXTozadPWR3P
      CS4dHBCMRHF73FNnDA8Uha2nz1i/exu536deLBGJW4Fcs6srU1/3zrOfWLn1Gf12e1yUpmAa
      Juu3bkxcZ836fToOxirTrNZY3rhGtVjiwf37U4971dRrd2jV6ixtrJPf3cc0DfqdLj6/n407
      k0u4G9Ua+d197n39+BSCT4KxpjnBzVKRVrnM6v0HDCSJVrmE0uuRXlwivHBxqNZ5CNYtCC6V
      fukEi/Qlmb0nvyPfVDg4KrKz9fI9P5Y3ssqh07jcbsKxKKFI2OrvtTFuyEqHFtDUgQXB4Qj6
      QKW4fzB17Uk6tK5p9FptQtEoR1vbtgC602hSPc6jDQbEMxl0bUAoYjnC01QrvekJjsRi9Dtd
      9l69ptee/n6voiyH2/qFKOzto0gyucUFYunJM75gDMHZzDkIjibitJvTIVjudk+d4OLONp1a
      jUgqRa/57lCt8xDs9eETzkDw4xMI3iCVmcUVjHNvPYffH8AfcDatD6xy6OL+Iaosc7S1gyLJ
      tOsNvP7pTrAqy5iGyUBRON7eQVVkQtEoWRvl0Eq/b9XSSzJev59Oo8nc2iqj0fTnSo8oEkkm
      kDodavkC1eM8nUbDVqR7IpNi75UFwc1aHZ/fTyyZxPUR2hn/HGo3GhT2DqyZyEuLp65/Mvvu
      3ZgTRWJRamcgWDyF4MmNQwCiz3/qBIcTCUS/n3alMjHC/oNB8N/vvEJ3AIYmMPr1X5Kt4zpN
      u/O4BBIXuIx2FPMF+PKKQXBJ6vKDw55giwGcXfhNeUih7XxE0p/VCa5JOpIDIHUJMB9ztj1o
      mCYDhzOGBZyXQws4330aXSaO7iPJ7RIIOCz/vowCoots1NkW/Mi4ePbcuQugWyvy8h0QnM2E
      mVm9x9bzJ5gDhYUbd1lbcNbYoKkqez/+SHZ5GbfoobK/TyydQen3Wbt3d/LaEyf4s5sYhkG/
      02Go6ww1ndU7k5OWT0Ykrd25Tb/ToVmuEEkmiMTjxJLJiWtVWWbz6TOu379Hv9OhVizhCwTQ
      VIVbXzyauFbuS7z64Sn3v/2K0tExqqwAlvH4zTffTFx7FdWqN86PSBqdzAnOWr29E9SoVMdO
      8GOOd/eIpZLk9w5IZtLE5yavNQ2Drac/cuPRQ463t0nmchxtbjGzvEQ0bSMdeqRr9CTpQgiW
      JJndH35Hoa0TDEaYd3jygwWjsUyGSDJJMBJF6fUJJxJ4bYzRPJkT7HK7iaWSjIYjeq02PRsA
      fRaC++0O/U6HeDqDpk7vMvL6/USTiTel1OEQ82srRBKJqWvrpTJL1y0I1gYaxf1D5laWiCau
      ViKcXTUqVXLzcygnTvDgxAme/h216g0LghWFZC57OiLJzkZFfmeXbrOFaRjE0xmkbpdYKkVn
      wozhcxeA4PXhE4Z4RQuCPz8DwenMLO5QnPsb88STyUuVRJumiejzYRoG7WoVbyBAYXvbdk9w
      5TiPIknUCkVKh0d4vF58NgD6BIJVScbjFfEFAlSPj6kVpj/PduoNmpUqUq/H0dYOA0W1grFs
      uMiJTJr9V6/xiCLhaITs/By9doe55av17G9XsUSC4uHx2Ak2cbncdJotgqHp9WNnIbh0dEzp
      8Ph0rto0hWOxcWp4h2o+b31n5Qqhj1EO/X/89BOyIwYQmLkgv8WOTHDOAAJ4HVZ0ugTBsYt8
      FVsiP5YTLOsjxyXrhgnGtGrQX1PZsIju0Am+zCUZvCD9y44M00R3SLIuwSTocvZRXsVy6JFh
      olzCCXZ6sxiOnA9RD4guYheU2LwFwS/2SyTHEPy7f/w9i6ur7GzvkcuGmFm5z/bLH0lFfMiE
      eHTvprM3cuoEX0Nwueg2WgguAanbY+O+fQgeKAr1cpmVz26S396d6iKf9ASv372N0peojZ1g
      l2u6E6xIEts//sTGg/v0223qpTEEKyq3poxIkvt9Xn7/lAd/8zWCy8XrJ8+sDjivlwdTgsCu
      os46wfvjylmXy0V2YZ7c3GR2PAvB+5tb42CsHrmFOfzJyT5Ct16nUSqxcucOha0tQEDudcku
      LRGYv/i4b0Fwvy+d9gRXKnXSM/N4fSKSpLD75HfkWwMMXWN+yfnz64kT7PZ4iCYSGIZBOBaz
      5aqelkN73CiyzFDT2Xv+Yrx28l3JKodO4Xa56bXbhKNRjra2kHrTAcsfCDIaDhnp+mk/8dzq
      ChEbIFsrVVi+vkGr3mDn55f0uz26rfZfhRM8v7pCNJFAlWVbo2zPQvBJH0E0EafTnD5juHxw
      gKaoGKMRgWiUTqNONJWmO2G80tsQ7Brh956H4JmlDdKZOdyhBPevzZIv19Dkd+fDT5MqyZT2
      D1EkmXqxROngkEa5YssJlro9Kvk8Sl/C6/NhGAbxtHUxTass647v3FK/h8/vp9NsMr+2hmFM
      f66Uej3cHjdyv8/x9i6aqtJrtWyVUiczacsJFkXi6SSiV8QfCOALTH+/V1HtRoPi/iHteoNu
      q8XM8iKhaNRW33YkFqNWLKPrGsZohOj10qzWCE+JkATILCxYjfS9Hv1Wi2AkQqvykSD4H/Ze
      OWIAAOMS5pDTZ2rzEgzgdkHYYbhVzOu/kk7w9w6dYI/Likt0ot5gRF1yVg0aEF2EvFMY4NeU
      z+PC48AtNE2TkekcDH2XiEe/jJzOu7t6CGzdZJwGgV1GEZ/b8Siqd32/5yG4WuDFQflCCJ6Z
      S9OTh8ykLeNnbX39UunQz/7wHTce3EWVFcpHx4SjUUzTZOXmtDnBOnsvX3HjwT0a5QqF/QPC
      sZjVmztlTvBAUd/MCW61qBRK1sge02T15uSSZkWWefGnJ9z76jHNep1asUQoEsE0DNZvTy7x
      lft9XowhuFYo0Wm28HhFvD4fd2/dnrj2KqpVq1vBWN98yeHWDoZhoMoyqVyOmUW7TrAVjCWc
      CcbKzk2OVa+VypSO8tz98hG7L17jET30u91xL/LFEZLnIXg4fCcEt6sl2s0WpWqFarV2qTtX
      r90Zz/qtokgyuqYjS5KttGTRK57my0TicUKRCKqs2FrbqjdYXF+jWa3RbXeIxKIMFNVWNWiz
      UmPp2jrNep1ILIbU7RGORuh3p7NQrVRh5foG7XoDWZLw+n2YpmkLCq+iGtXaqRM8Go3QBgNC
      kYgtt/4NBKsY5gkEJ2xBcKfZIjZOGEQAXdcJBEMo0ruTtH8Bwd4xBHvHEPwVAbPPzNIGM4ur
      /E//5T+xnksRSjsbcHCiUDTK0c4egVAIr9eLaZoEw2Fbfb3aYEB+74BKvsDh9g6qLBMMhzBs
      nMSxZNyaMez34/P7aTdbuD1uW88/8VSS/c0tvGMo8wUCtOtNfP7phXsWBFszhkWvF0WSMIYj
      3O6/zMmSsWSC4tHYCTZN3G43nZZNJzgeo1Y6A8E+L61a3RYEhyIRWtU6mjqwRmaZJnK/j0f8
      COnQ/3i4ydDhc6LTCkkB524uOJ8TLACCQ/iOXdE5wT81nAdjOeUl0zQv9R1dpA8GwYpm4NC0
      cxxxDs5P4suEarkECDkspb56xdDjMVaXuVk4/H5l3aDtsBTC5xYuLHe/EIITyTg31hbOQPAu
      yysLaIabQbuCK5Tm4T3n43lORyRdv4amDqiXykTiMbTBgLXbk0uazzrBqqLQKJcJBEN02y3u
      fv3V1LWHm9ts3LtD+ThPfneP7PwcsWSSaHJyVedJOfTG/bt0G016nc5pyO/KFPg+heBvv6ZR
      rlAvV1i+bvUEf37/wcS1V1GtWp3DrR3uffMlhb0DTNOk1+mMe4Inf79nIXjv9RaucU9wbmGe
      0JRgLNMw2HrylBtfPOLgxUu0wQBjNCK3tMTMnI2e4NHIguBSqfQLCPYiDDX6kswQN7125T0/
      kvNyezzEx06wrmk0SmVb/cBwphza40aVLYCeWV6aWs8P4znBY/MptzBPIm3N6Rq8Rzm0y+VG
      VRT0gYZpGLbGs55CcKNBNJkgGAmz++IVPRtzc6+imtUa2TEE5/cPrOylxQUSmekhCmch2DRN
      C4KTCTqt6RB8vL1Dt9nCMAxyy8v4Q0Fi6RQd206w6MXvGhHwedk9qvD5lycQfB1/wM9oqGMO
      VYKR6c3Nk6TKMuXDI1RJxhcIEM+kCYTCtpxCqdujmi+cOsGmYYzdxumO7EBRKewdUC0U6bU7
      ZOfnKB/lqdosh25Va8i9Lv5AAGM0YjQaIdiY9XsWgg/HpdTp2Ryi7zKDpn67iiUTlMcQPLu0
      eLrjZasn+BwEG+8FwdFkkmAkjNTpIHW7zK+v0yxXPk4w1t9tv2Tg0PHzXAICnAZLW73Izta6
      BQg4HGtzFZ3gitzjmUMIFgCnWQCSNroUA/gv2JT5YBDc10Yorvc/owQBMiFn/QCGaSI77Adw
      CTh2Gf/aJAhW+cefWx6XQNDhjWZomPQG03qC3wXBW7ssrS6gG2469Qrz8wssrq06vnpGwyGv
      v/uOtXv3GGoalaMjYuk0HlEkOXMxrJxI13X2X7zi+oN7VPIFqvkCsVQSVVZslEMr43ToO9bE
      xnodfyiEPhhw7e5kR1aRZF58bznB1WIJqdvF7fGgyjJ3vpycLC33+rz4wYLgSr6AIkm43W5M
      4OGDvzwIbo4h+KwTbKVDZ5lZnDzUr16ukt/f5/5Xj9l7vYUguJDGTnAsN/ncaJQrlA8P+ezx
      Fxy+3sTt8SD3eiRzWZLv6Ce+AIL7b0Ow34trDMGDbpnf/+HHS41JGg2H6IMBuqZRPjhAHwyI
      JBLoNpxRURTxj0NWpU4XqdslmkjYCl71+v3WdqeuMVAUdE0jmkzgtzG5pFmtsbSxTqteZzhu
      15tdWiSWmg7ftfIbCFYVy7WOp1P4g9N7oK+imhc4weFohJ6NNOx2o0Eqmz2FYFW2D8GhaBS5
      3+fkqX6kD/EHg6i2nWDRi99tnELwwzEEzy6fQPCQpY17zKVDl+oJFgQBXzCEKkkkZ2YwTZNa
      vkDdxtxcbTCguHdANV/AI4r4g0GOtnbQbQy7Pu0JlmWrHMEwOd7esRVxHk8nOdzcOo02z87N
      IfV6zNkth35tQXAgFMQYGRxsblnp0n+BiiUTlMYQjAlut4duq01wwqzfE0XfCcHvDrc6UbfZ
      xBcIIHW6jIZDTEyUvjSxn/jDpUO/dJYO7RIgeUGIqR2ZOM8FcgnWGB2nclqGfRUh+GONSBoM
      DceMNzIuDl3+zaVDX0YCAjGHCW1wObBzum91FcuhP5ZcgoBDwx3DBeIFZfbnLoBOtcDLMxD8
      z//99yytrbK9tcvyGIJD47vk2trk2biTdNITvLRxDZfbRafRZDQcYZoGq59N7jM+C8Hlo2Pr
      5zEWRZVlNqaEag0U5bQcul1vcrSza8FVKkl8yrO8Isk8/9MP3Pv6Me16k0qhQCAYRJUV7n41
      GYKl3pue4GqxRKfZRBTH5dC3J4P7VVSzVudwc5v7335lQfCZYKzpEFwhv3fA/a9PINjqCZ5Z
      mCMxM7kIs9No0O90mV9bZfvZzwRCIbrtNqlclsw7ArnO3fPMX0BwtWpBsM/vxT2G4EqlQqVS
      fs+P5LzcHg+JdAqPKBJNJDANC0yLewdT156F4KGuUysU8fr8SDbKktv1Jovr6zRrdXKL8ySz
      GbJzs2g2SqlPIs1b9QbRhFWGvbC2MvXCAetLXblhQbAiSfj8fkxAs8EeV1HNao3cwvwbCNbe
      B4KbpHJnIVghlkzQseGax1Kp09J2XdcpHhwSCAZRZJsQjOjF7zYJ+H1vQbBvDMGRgIjLO92V
      myRVlikdWmOO6sUSpcND/IEAuaXFqWu1wYDivgXB/mCQ1EwORerjs5EqF00mONrewef3W07w
      whyl42Mq+enPs/F0koPNLbxeH4fbOwwUhW7L3qzfZPYNBHu9XhRJxhiNrD7mv0DFk0lKR/k3
      EOyxIDj0vhBsGHjfA4IblSrlwyO6zRbhaITM/Bxyv4/4MSD4H/ZeoTl8qHY5LBcUuNyMYacG
      9GUqHKNXtBz6Y0CwPjIZXDTr1IZMLq5g/WC3IMMA0+G5eJnYfKcge5nbgMknmP1zyMS8VPn4
      RTt15yG4kuflYeUMBP8LS2trbG/tcOOzDXb28/gEmF2c59ra5Jm8k3RSDr24cY3RcEjlOE8o
      GkFTB1ODsXRdZ++F1RNcLRQ53NxmdnmRYCQytdhKVRR+/uP33PnyEf12h+LhMdFEHF3T2Lg7
      GUYVSeL5n55w7+vHeESRl98/JRgO4XK7WZ3Sxyz1rHLoz//mqzEEtxBFEdHn495fIgRXaxxs
      7fDg26843NxhZIxQZeVSEJxbmCMxMy1Uq0Jx/5Dbjx8h9yWq+QJyr8fsyjKpd1QYnIdgw/gF
      BDfGEOwjGXART+VQmiX+5fvLzQl2ezzExxA8UBSGuk631bY3ImlsJgFk5mZJZjNk5mZt9de2
      602Wrq3TqtaJxOOEoxHCsaitYKxmtc7yxjXa43CrbquNYZoMbVSw1ssVVm9s0G40UST5FILt
      GHBXUc1anZkTCB7PUr4sBHdtQHA4GrNCDgSBvRcvaZTLJLIZ++XQiCJ+t0nQ72PvHATf4PX2
      AaIHVm99zlz8cha+KsuUjywI9ogimCb+YMBWaYA2GFDYP6SaLyB1u6RnZygfF6jaANlYMsHh
      1g6+gJ+j7V1UWaFdb+K3EVAVT6c42NxC9PlI5bKEY1GM0cjWmKNkNvMGgn2+MQQbeP5SITh1
      BoJ5XwiOUy+V0XUd0zDw+ny0anUisekQXDo4RJVk+p2uNQA9kaBRrkyMsP+AI5JeOoJgQXBe
      Di1cIqUZLscBTp3gTxBsX9rIQNGdQbAgCBdurnywW9DIdFhffxmiNE2EkfNkOKcXgCBA4Aqm
      PF816SOQNGdfkuiGgGgTguOJGDfXF9+C4O29POuLC4DJ2jXnEKxrGps/PGXx+rXTgrRwPIYg
      CKxMcYJPeoJXPrtBOBbj1Z9+IJ5OY5omC1NekzYYcPB6i+v371IrligfHeMPhfD6vCxtXJu4
      dqCqHG/vcO3uHQp7+9bQBq/4HhD8hM//5muqJ8FYogdtoPHtt99OXHsVdRaCDza3zwVjzS7Z
      g+B7Xz9m/9XWuWCscGYyBBuGwdYPP3Dz8WOON7fwBvw0yxVyS0vk7KRDm6ZBv9ejVC6/geCc
      BcGJgItEJjd2gi/XE+wRRdweN/pAIzgG0dFwaGvWryiKxFMpPB6Rw80t2vUGhf19W8nSXp8P
      /9gwC8eiyL0+Q02jYMOB9vn9p+G9Q31I+fiY0XBkq43TguDrFgTLMr6An7nlJeLp6S7yVdRZ
      CD4ZSRWORunb+I5OIHigqJicQHDSFgQfb27SaTQxDIPK0RHtWp14Jk13wozh8w/pHhG/B0Kn
      EPw1ASwI3to+QHRDOOBCDF3OCdZUldHQ2h0o7O6hSDLBcJiZpemuqtTrUy0Ukft9YskksXSK
      3OJ0BxnGPcH7Vk9ws1rDHwoSikRsjTlSZZni/gG1YolAOER2ft56rnRNr846geCT+h9Vlm2X
      Ul9FxVNJSsdvINjj8dBttwlFbEBwIk69XHkDwX4frbo9CE5kc0RTSaRul+ziolVKXalOjLD/
      oD3BjpzgS0AwAoiOXTQT02GOkSBwYb+pHUVEH/dTkx8Lfmuqq31eXzIZxIlk3XA8Ikl0C/gv
      qBL4gMlwrxk57N+8zNigTyj6Se+jCyE46FbJrD5g6/lT1ubTqO4I11cmp/q+j3Rd56d/+yM3
      HtxD7vcpHhyRnZ/F6/ORnp0MOtpgwLM/fMetR5+jSBL53X1C0Qhuj4e1zyYnPJ86wWfTocc/
      y+u3JsO3Ikn8/N0T7n/zmGalRqNaIxgOMRqNpoY9Sb3e2Ak+A8FeqzBuWqhWr9Pl1ZMfefQf
      v6U4npgouAQCwSBLG5NL0rutFpvPnvPoP37L8d4BqqxgGCMisSgLa6sT17brDXZevubhf/iG
      o+1ddE1D0zTiqRTzUwoAL4RgSSY1874QvIkguE4hOLcwN3FttVCidJzn3ldfsPP8FR7RQ6fZ
      Yn51mcw7zqsLIbjR1zl48k+Uezo7e4fsbb2eeOD3Vb/dYX51hUalSr/bQ+r2SGQyttzcTrN1
      mvAcicUIx2KMhkPyNkD21Amu1el1ukTjMbSBVXU4Tc1qnZXxrF+p3ycYDhEIhZBtuMj1cvUt
      CAbrRjBNtWKJ1ZvX6TRbDFQVt+jB7fYwsPFZ1Ypllq9fo9vuoGuaNQnT50MZD+qe+JorVRZW
      l+l3uwyHQ4yRQTBkb17vhRAccwLB1k0rlkrSbU+H4G67TTyVRBsMEFwCcr9PKpeh3XhPCE6k
      Z/HGsny+MU8imSI5JTbwfRWORcnv7ROMhPGIHgLhEOXjvK2y5GgiztHOLoFQkKOdXRRZIhgJ
      2ypLjiUTHG5bTrA/GKDTaiOKHgQbD06WE7xtpcv5/Ui9Pv1Ox1YZdiqbYe/11hkIVjANe05w
      eibH3isr4UD0etE1DV3X8Hqnh2qlZnIcbG4jCAIejwfDMBgoiq2ZyslM2rqpmFhutyAg9fq2
      wgfOQrDACQR33guCh7qOaZh4/T7a9QaRCWOOThSORq1h5OqA0XBEIBSiXq4S+xhO8D8evmbo
      gAEuU1oM4HLuojk/KM5n336SfRmXMSu5+Lz6YE6w09PJME1Uh26fAKctm+9/XBzPCBMA/wUu
      4yf9ulJ0g7bibBcoILqI+KekQ3fKeV4enYHgn5/ASOeLezd4UZL56u5kYLMrXdP56Q9/5MaD
      u/S7vXE6dBxNVacGVJ06wTdvMFAUGuUKyzdvcLy9w40Hk2fuqvKbnmCf38fz734gGAnj9fmm
      usgDVeVoa4eNe3eoFUt0Gk0ElwtFkrg7JRjrQggWRbw+OxDc4dUPz3j0P1gQ3O/2cLkE/MEg
      y1MguNNssfXTWQi2ivDCsSiL65MhuFVvsPvyNQ//5huOdnbRNA19oBFPJ5lfmVy79BYEn+kJ
      np3S9VcvVcjvWxC892oTQbDmR+cW5glnJwdjGYbB5vc/8NmXj9l7/hy3x8NAVohnMiyvXfyI
      fO4CMLEgWPaA9OSfKA+CpAZ5/uXnEOHAr5eF1++cQHANj+ihXqoguFy2nk1FUSSWSuHxinRb
      LXRNY/vHZ7aAst14A8H9bpd2o4nb48EYTYdgn99/Cq/F/UNcbhdrtz+jVatPXXsRBI9GI5sQ
      XGb1szcQ7Bkzi50Ng3rplxAs4PX7UJXpENw4geCeBcHmyCAYDiH3palr34JgXSMSi9oaJ9Vu
      voFgsMzLEwiedgEcvd6k22hgGAZyp4vH6yUYiTCY8H7fhmBRIHkCwdcXWLnzmEzEQy59uUTo
      szoLwb5AgGQuSygStjXmSOr1qRWLyL0+4hgEZ1eWCdtwCmOpcU9wIEAqlyORTRMIBW31GVlO
      8CG1YoncuKlD6nSZteFep7IZ9n8lCB5qOrquvwcE7+BynYVg1Vb5dzKbOQfBgsspBAt4POIY
      gm0kPF8CglOzM8SzGeRuF38oNB5H9eY8uUi/OQg2TefhVoLAhVNA7B7XMQMI1ljYT/qwkrWR
      YyfYL7ou5MMP2pHhBAsFQSDsd34yOUZRQbiUA/1JH15Br9vxDe5dOncBtMvHvDqq4hcGzC4s
      0ZZHNCslNj67TSZxuQK4s9I1nWd/+CM37t9F7kuUDo+48fk99l9ucuuLzyeu1dQBz/79O249
      eoAiyRzv7pOeyREMh0nlpvQEywo//fF77n75iE6zRbVoOcGmaXJt6qxfied/+oH7X39Jo1rj
      /2/vzLbbONP1/FShMBTmeSI4DxosyRpp2bLUrd57d9Irx7mfvo6c5CayemWvJCvZvVe7bcu2
      rJHiJI4gCWKegSoAlYMCKZIiUUVQcrt36zvTwU9AQFXhf/73+963cKAEd7rMXjdQgitVXv14
      FIILh9NhhhBcKrPw0wEEb1KrVBEEEdn1C0DwK10J3lhZRW0rqIqCPxRkATq4wQAAIABJREFU
      ZHIwBOf3s2wsrnDzwfkhOLu7p88Efzl/AoKTxM4wtzqo/fQOu5vb3Lh/j5WXr5GsVl0Jnhgn
      kjShBAsC1KpVCk2VzZff8e2//0AwFSdf+LBRPrVymdTkBIX9LPWqrgQv/Pgz1VLJcCyrXDxQ
      gnVHOI/fRzgeM+UsXcoXGJ99B8EHSrCZXWAxm2NibpZiPk/jqBJsQhnNZU5CsAyCYA6Cd49C
      cBvJakWSpF8Ggqd0CO52Omi9PgTXjSG4mM0RHx0OgsuFIuF47BQINp4Xr5TK+MOhvhIsvlOC
      zbZDaxYJh1UgFI4TTowy/9Ut9je3sH7g2dWjEGy1WpHdLlJTE3gHKHYH5Q342Vp5i+xysrWy
      RrNeZ3dzi4wJZ2lfqK8EO2Vkp5NKsYTVZjUlYgUiIT1juD9TcKAEm5ljPgrB9qMQPMCw6aB0
      CF7CIknY+hDcUVVsJuKV3odgrQ/Bxu9Zh+AN3dhKtBxCsJmsX38oxN4BBAsCktVK1SQE+45C
      sKbpec4mIdjj81LqK8G97hEleEAnw6+yG3RYYyx97dBLP9U/YP0qbQmGzaCFTzfApzpfnQnB
      8ZExdvbLKEqb23du8yHjs1RF5dk33x62Q+9ubHHp5g3WFsxB8PNvv+fKnZvUyhXW3ywRTsTp
      9XrMGqjI70FwegeXx4PGeSF4n0Imi9OjJ1savW6tUuX1D0+59fV9MumdQ2MssxD8+qdn3H30
      FTvrm9Sq54PgxWcvufPoK7ZX1/rt0ENA8PIKqqKah+DMPhtLK9x8cJ/1N8v0el2afWOsc0Hw
      68X+TLDuDm0EwZn0Dnt9CF7uQ3ClUCQ5MUY0ebqz9CkQXKHQVNl69R25SlOHoIs8kk+pWrlM
      amqyD8G1PgQ/pVIqGQJppQ/Bxf0c0ZHkoeOXmX38exAc8KMow0Cw3oGqQ7AxFOYz+0xe1iG4
      1Wjqe/BzQPDUAQS3zw/BE5dmqJbKqKqKIA4Jwd3u+SA4lyc+mtIhWOuhqupwECzoEOw3CcHV
      IxAsiiLNPgSXC2fHK50CwSKhcIJIYoxwwIPDKl5oS3JaHUCw6ygET0+ZCrv2BPxsreoQXKtU
      iCQTiBbRlKmPDsGrHwSCG+eB4FiEtcU+BDscfQjWBroWH1Q4EWPtKASrBxBsN37deIyNpRVE
      UUSyWs8FwaGjEGw5HwQHwiH2ttLvQbDbFAQHjkOw3IfgAVm/B/WrguD/N6QSDMMbVAkCWC4A
      0J86mn/dpWkXM8c9be7jo0GwKApDDbdrmsYpca4mF4PlU9Tvf9jq9KDdGe4WsIj6YPzJOhWC
      42Ev2+kMqWiIhtWDDYXZC7hBnyxVUfj5m++4fPMGvV6PYk43L203m8wZZP2qqsrqy1dcvnWT
      XrfHy++fEIiEadTq5tqhv3vCtfk7VMsVdtc38YWCtFstLhm4Up+E4Hwmi9VmRXY6GZ8bbKp1
      DIK3+xBs092hJ01B8M/cffSA9Prmu5lgl5NxAzOvkxDcPJwJ9hlDcDant0N//SUb/Zlg9WAm
      +BwQvPZm6dAYKxyLkRgfBoL1meBQYvBMcH4vQ3ptnWvzd9lc1qOZ7LIDuyybM8YSBKhVKiyt
      7XJvNsy3Py6xkU6znzNu+T1P1cqVQwj2BQOgaXRUFdHE49tqteJ06aN1bxcW+i0JblOKbClf
      YGx2hmI2j8fnpVGr9+OOjEf1TkKwy+NGbStsmzDzOgbBzabODYJAxzQEX6JcKKK020g2K5Jk
      RTERC3sSgkVR0BnEDATvZ0lNTVCrVvsQrOmf8zkhWOt/tx6fj1p1WAgOUTUBwS6fVxfMBAFv
      MIjNYWdt4Q2lnEl3aM0iIdtEJkdjPFnOcf/uFa5PxLG5PqyD2VEleH9nl52NLQBTfflKu83O
      +gaZ7TSheIxYaoRSvoBsIuzaHwqwubKKwymTz2SR3U42V96itIxPVN6D4FoNT8DPyOSE4dpQ
      LKpDsM12eAGah+D4Owi223UI7piD4HDiOARrmka7dQ4IXjsKwXprgWkI3n4HwVarlWq5jNtr
      AoKDAfJ7+/rD4QCC83m8JiB4rx+7VS9X2F59S0dVmbxyGeeAB9xHg+A/by4OpQRraChDxtAL
      gO2UfZ7p9Z8g+FddaldDuQADSKcYtf3q3KE1LpjX++ki/g9bVotwKshepI5D8O4WC1v7OG1Q
      bnS5Ph5mpdjj3rXBsHXeUhWFZ31jrFajwcqrBUanJ7HLMuHE4LG3dqvFi2+fcOX2TcqFoh6e
      4PfRqNW5fMsIghsnlOBd/edRg5lrRkpwjZff/8TnX86Tz+yT38/ikGUsFgtTVwcbctUq+kzw
      7SMQfDATbOQsfSYEm4DvcqHQh+AHJyDYy+j04EONsyDYFwqRMgHB60sr3DoKwX1jrOS5IPjN
      MWOs+KiBEry9w97WNje+OFCC3xljmVOCRR2CdzP71KtVnr5ZJb2+PPBFh6mjEBxOxIn09/Jm
      WpqrxZKuBGdz9Hpdsju72Bx2mqYguKhn/Wbz1CrVfj6YamokspjNM3GpD8F1HYJ7vS7dnvF+
      LZ/ZZ+oEBAuiYCpe6UwINhGvlNvV84nfh2DjXOSzILhpEoITJyHY76N+bggWaLda+MMhqibi
      s6rlvhKstBEtumFBOB49nxIs2ywkxqb5w+9/RywaZTQeY8ht15nl9nnZXtOV4Ea11o852mbf
      REuzNxDQlWC3C7ssE0nGadbqh+HZg8ofCrK5rEOw7HJSKZWx2qyIgvGeKxAJs760cgSC64ii
      BYuJk6uTENxutkAzB8GRRJy1N8NCcPwQgq0XhWCLeDgHYVSHENw7gGAb1XLFPARnDiCYPgQX
      8PrPdng+KI/PRylf6CvBPZxuN/lMFv+ADoOPBsH/Z/0NHWk4VUoQhvXnGU58O/IHhqsLfoKf
      uOVvVx8NgiutLm3L+a8MAfDJw8q5GpYL+ENf5Pq/UH7tBdZ+qovVCQjeZGEri2yDSqPLWMzL
      2m6Jx1/f/+AvvPr8BYnJSbqdDuVcjl63S6/XY/LqYBhVVZXVF6+4fPsmme00hcw+E5fn2Fhc
      5vLtmwPXthqNw5zgarnCzvomTrcLhywbOi2/g+B7lPJF9ra2cfu8OGSZpIFRVK1S0ZXgB1+y
      t7VNq9Gk2+3i8XsNdYRKqcTCT8+Gg+B8gcXnOgRvra4dmwkeMzACOwnBR42xUgbv+T0I7vYj
      kuJRw1CQ7M4e22s6BK++fnPMGMsYgtPsbqX5/It7LL98dWwmODpiBoItOnHv9SFY7Kkkxz5c
      C8RB1SsV0qur1MolPb1D0F299jY2DNdarVac/bhNta2gtNq8/uHpQNA5qFK+eEwJbtbqqIpC
      s94wXPsOggt4+rPIuxtbphTKQibL5OVLlAoFVEWh1WyYft3cbmZ4CN57B8EdVUUUReyyg3br
      /BBMT8PlcZv7rE5CcOcAgo0PKsrFdxAsCAJKq30OCK4QOIRgyzsILpqFYNHSh+AZ/vCffsfW
      zj6aaiybn7dsDgcTV6+CBvndPfa3trHa7cQNnqTQV4I3Nslsp5FsVgRRYOLynGFKPPQh+JgS
      7EJ2OhFMcEMgEtYzhu12ttd0h4XkxJjeim1QoVhUzxi22bA75cOBFsFEms37ENyh0+lgHxKC
      lVbbZAt3lPR7EFw/fPgMqqMQLAoiVtsBBJswLzsFgstmIdj/K4LgPw2dEyzgvIDRrGXoiKQL
      wKh2MQb4NMb58UvTtFPnWj4aBLvtlqGH4v/urgfh7/A9/4NV74zOhGM3wM7ic97k2kjdKpVq
      B79Pwu1PcvPa4Pig81az3uDHP/+FS59fxyJZePP0ObLLiUWSuHH/3sC1tUqVn//yLVfv3ES0
      WMhs7xBNxll++Zr5x48Gri0Xizz/VleCC/tZsrt7+hZIELj+xWCH52I2x8sfnnLzy3mUtkIx
      m6NRqyFaLFy7d3vg2txehoWnz7jz8Cu21zaoFEpIkoTNYefqncHgvp/eYfHZS+YfP2J9cbk/
      E6y3Q1+59fnAtbub26y+WmD+d49YffVGh+Cehtvn5dLng9vO0+ubrC8uM//4IUvPX6EqCh1V
      xRcMGhqBbb1dY2tljfnHD3nz9Dndbpd2q0UoFjWMotpYXmVnY5P53z7k1Q9PAf16iY4kDFXz
      9cVl9rbT3PvtQ158/yMWi4VapUJybJTUzOmHHMf2C/5ECrWQplBpUW3U6fZnKz90tVstRmem
      aNRqWCSJ0ZkpIskEuV3j5MFWo8nY7DSNWg1/KIjdYef1jz9TzhcMZ3tb9SYTs9M0a3W6nQ6h
      aPTQoc2oGvUGE3MzNOp1QrEIklXC4ZRNiVmNWp3JS3M0ag3QwBvw4XA5TYlotUqVyctzNOp1
      BFHA7fHg9npMiXeNWo3xuRlajSYWyYLD5cIb8GFmw9as1xmdmqDdbGG1WbE57PhDQXomlO92
      o0VyfBSl3cbmsCNZrQSjETqqsfKtttvERkZQFRWHU0a0WAgnYqgmoF9VVCLxON1OB6fLCZpG
      bCQ5EPpPZIRpREanuT9/l395OM/oxIyp/Kzzljfgp1mvE4xFqJUrlHJ5BEHgs3uDHSEAgpGQ
      nhEcCpJJ71DK5fnin3/L/O9+YzjbG45HqVdruP1eIskEFslCKBYxFVgdSyWpVao4+3FO5UIR
      l9dLIBo2XJscH6VaLmOXHUQSMRxOJx6/j1A8arh2dHqSarmMZLXqFpBeN063m/AZVn8n19ar
      VQRRJBiN4g34sMsy0ZHBgyUAqamJwyyxQDhMIBTCarMZHkUCjEyOoSoqvW4PXzBIKBbFIkmG
      AXkAifExer0uHVXFG/ATTSYQBMFUpnJiLIUg6idHbp+X+FiKXq838Kj5480Eby7SHdIx+SJx
      Q8MC5UU/hU9q7q+7er80BPd6p7+gmfpbnYpcbOD6U/2aSxSEU6+rARCs4rUrxOIpGs5Rbk0Z
      /9SbrWa9zk///g1zn1+nUijqXaHxGDvrGzz4w+8Hrq1VKjz7y3dcuXOTSrFEvVIlMT7K6qsF
      7hlBcKF42A59FIIRBMOYo2I2x6sffuLzL7+gUaux+mqBSDJBPpPl/j//duDa3F7m0OF5++0G
      lWIRiyRhd9i5emfwti+T3mHp2UvmHz9kbXFF39IMCcHNRgOtb4xlNAOdXt/oQ/AjHYLbCmpH
      xW8GglfX2Fq9AASvb3Lv8UNenxOC1xaXyRxA8Hc/YJEkauUKyfHRM1XzYzeAP5FCXfozZcFG
      q9kmGIxQTC8jTH64kGyAdqvN6LQOwcFohLcLi8xe/wybwxhG240Wo7P6WpvDTnptnXxmH6Wl
      d1gO2ou0Gk3Gj0FwBKWtmJpFbtYbjM/N0qzXcTj1E6tgNELARHJOo1Zn4vKsDsHoDNTraaZ+
      NeqVWh+CG4h9CBZEAc3Ez+tJCJZdLiTJYorrmvUGo1OThxAsiAIum8dUik+7eRyCVUXF5fWY
      h+BUkk4fgpW2YhqCO4pKJB7TIdjtot1sEUsNhmDLH//4xz8e/ENpNWj2rFy9PMfcWBKXP0ws
      niAQCOK0m98taZrGWimHdoYQZnPYyaR3iI0k6apd3F4Pbp+PYDSCIAgDGcAhO8hsp4kkkwiA
      aLFw6+sviSTi2J3ywO2T7HSS2U4TTsSRXS7arRa+YADZ6cRl0Koru11kttMEY1Ea1RqSzYrX
      78cfDvXf89lrXR43ma20HsnklOn1esh9EDZSVt0+D3tb2/jDIRyyQ28vttnwh4LIBvO5bq+H
      /fQu3mAAu8OORbJgkSwEIhHDGWqnx00+s4/H70OyWbE77IBAOB4zbKeWXS5K+QJujwdRsiC7
      XfS6XaIjScMcOLssUytVcLpd+qmXz4vaVoiPpQxP6+yynUatjkOW0QB/MEiz0WBkYhzrGW7a
      v0pjrGEhWOBiEDzsB3HRbONP9berj2qM9fcUOSR8UnP/IetUCB7xd3m53sEr5Jn67C7T4x+W
      AZr1Oj/++RsufX4N0SLx6smPBKMRVFXl1oPBrde1SoWf+xCs9XosPX9JcnwMu8NhaLqkQ/AT
      rs/fPYRgR18JvmFKCf6Jm19+QWZ7h0I2h81uQ7JKXLt3Z+DasyDY5rDz2bkgeJl6pXZojGUM
      wVusvnrzQSBYabfpqB38oYChG/ZRCF54+pzeAQRHo0x/NgwE14mOJI0h+M0ymfQRCLZYqPUP
      SSbOgOBTleBALEUqOYqiKB9JCW4zOj2p79ecMpLNhiCKpjxnWo0WYzNTNGs1JElifHaa+FjK
      1LZJh+CZYxBsPacS3KzrsT/+cBC7w4FkNU5qadTqTFyapdmHYI/fj+xyYbEY/wAfh2ARl1dX
      ggVTSnD9BAQ79fZzE9WsN0gdgWC7w4E/HDQF0Ech2H5UCTYxA30SgkWLSDgRNwfB6nEIBl3A
      VM6lBI9NE/QFmR4PMzM799GU4FazSTAWpV6pEoyGiY0k8ASMzY+CkRDNegNfKEStUqWYK7C3
      uU0pf7b710GFEzEatTpuv49oMoHFaiUUixKIGJ/kxFJJPSfX7SaajGO32wlEQoRMtGEnx0ep
      V6vYZAeRZBzZ5cQb0LPNjGp0epJauaIrwYk4bq8Hp0d/D2bWNqo1BFEkFIviDejAHzOhBB+c
      AIHeCh6IhLHZ7cRHjdXckclxVFVXgv2hIOF4FEmSDB0hAJITY4eD9N5AgOhIUleCTbTKJ8ZT
      CKKlrwT7SIyPovU0UlMTZ675iBFJi3Stv2x2rgBDc8dFIPjgtYde+wk+PnqddZV/PGOsnkZn
      yB+Pi1wQF5mvvdCj4G8wi/+pzlenfb3HboD0m+cs5luM+Hq83NAh+PKtB4wmPpwKDNDtdHj+
      1++49fABqqLwlz/9K7cePWDx6TPm/+nxwLWqovLq+x+4+fWX5PcyLD9/SXxslPxehju/fThw
      7VEI1no9srsZgtEw64vL3Hn09cC1R5Xg3O4eHVXFYrVSzue59fVXA9fm9jK8efqM2w+/QtM0
      nv77X5HdLmx2u2EbdmZ7h6XnL7n3+CHrRyHY6eTK7fNA8ALNfjqlKQhe60Pw74aF4LfMP37E
      wtPndDtdlHaLUDTCtEEU1UkI1uhDcDLJ1BUjCF4is73DvcfvQ/BZTtrH9iiBZAo1nyYQ/7gQ
      bJEkQjF9/7v8/CW1SoUXf/2eStE4Islqsx6OP1okibHZGZwetyk19ygE63taGwtPn1HKFzDa
      AOlKsA7BpUKB7O4eNpsN0QTI6jCqQ/DCjz9TKZXpdrumoLBerTF5eZbWEQh2eTymximPQ7Ck
      Q7Dfb2qv12w0SE1fBILHDiH44DvrdIxVZOUEBFssIpFEnI5qBoI7hBPng+BjSrDabtLSbEyM
      juB0yqRGR4ibaPc9WZqm8baUo3eGEtxRVTaWVxAEgdGZKZKTE8zeuEY4kcAhywO3QEq7zeby
      KoIo0m42KecKiKKI2+fFGwwM9AWSXU72t3cIJWKUcjnymX3uPHpANJnA7pAHXhdOt4tMeodQ
      NEogEtZPnTQNb9CPx+8zVIL3t9MEImHG52aIj6awWq34QgHcPu/AtW6/l8x2Gl8opDvKCQJ2
      hx1/OIhsYAbm9nrI7uziDehKsCRZ+y0cYRwGSrDL4yG/n8Xj8yH1Db0EMKcEu12U80VcHg8W
      ScLZV4JjJpRg2SlTLVdwulwI/e9VVVTio2aUYIfeqtJ/f75QkFazycjEGFbbL6wE/2llAWUI
      I1NBEHAM2UYNYJOGlYIvxgAXUZE/wo/spzpRZx1yfDQIbqpdWt0hhuLhQjfA0CVcsI1iyDvg
      gz99PtWpdZbSfwKCn/Em3ybl6/Fio0PKqyKHRvj86mD4OG9pmsbP//Znpm/cQFXaLD75gdTs
      LJnNTeZ//y8D16qqyqvvnnDz66/I7WVYfPozgUgEj9/H6BlznwdVLhR5/u0Trn9xF7XdZuXl
      ArFUkkI2x93fDIbgQjbHqyc/cfOrL1DaCoVsFgHI7ma4/8+Dwf0Qgr/+it3NLTR0k9/oSMLQ
      GOt9CH6XE2wagh8/YuX1wmFOsMfr5dLN80DwS5S2PhPsDwVNQ/C9x4/0duhOB6XVJhiLGOYx
      byytsLOxdQoEJ5i6MtiF+yQEixYLXVXFMeDA4AQEj9LpQ/BoMkVDge21pYEvOkxV8gVy6R2q
      hQKBSITU7AyR1Ahjlwb/B0E3xgpG9VFChywjWW2Ucnn2NrcM1x5th7ZIEuOXdIC2SMY/hEch
      OBSLHL4Po954OALBjQblQoH97TR2h53szp7h2nq1xsSlExDs9ZjyMmrU6ozPTtNqNpH6EGzG
      XwcOILg/E2zVGcAfCpmG4MT4GGpbwW63Y7XZCEYjdE1Av6IohxBsl/sQHI/TUYzjpI5CsOzS
      T9kC0cjA9oszIdjldBINyFhkPzETSunR0jSNhdw+nTPozuF0kpqdwWq309N6eAIBfX40EkYU
      BJy2s090lHabzRUdgvVcMZGx2Rkcsow3GBgohMkuJ/vpHcLxGNVymVK+iCiKeP1+vAH/wPN4
      l9vFfh+CC9kshf2crpCGQ4AwcCvj8njYT+/os7WRCKJF780PREK4vJ6BWy8dgnfwhYLIfVt1
      u92OPxwyAcFesrt7+AJ+bA4HklXSITgWMTTHcnk9FPoQbLXbsMsOBEFX001BcKGIy+PGYpVw
      ulz0ej2TEOykWi7jdLkQLSIenw9VVUiYaod+B8GCoLtFu32egS3nHw2C/8fSa9pDGWOBxz68
      nCVdJCJpyHUXYYCLsMenunh9NAh22kRsQ84D/C0u4ouUIHxqZ/h7rfchONcm5dcheDJmBzTu
      3J3/oC/a7XR49s133H70gEqxyO76JggCDqfM+Nzg3NxaucLTvjGWRZLIbKVpNZt0Ox1uPxys
      yL6D4DvkM1lyu5nDs3UjQ66jEJzZTlPI5giEQ+T29vnyXwwgeFc3xrr98CvSa+uUCyUkq+71
      +dldg3bo7TRLz1/pEPxm+chMsMsYgje2WH3dh+BXfQjWzgnBj/sQfGCMFQoyZwjBb9laXetD
      8DNdCT4XBG9y7/Ej3RhL02g2GkNDcL1SITE2ysQZeczvQ3DhAIJHabVaNJvGsUXnLYskEep3
      QnoDARwuF5VCkd0NY5Btt/rt0PWGbowlO/oOxMaAdWCq1aw16HW7BKMRpL7pk1EdheBeT8Mf
      CuEPh8xBcL3OxNwMrca7mWDdCc/4F7Jerb+DYMsBBHvNQXC9zlgfgi2ShOw+JwRPTdButQ6F
      MH8ohGYKgtskxkZR2wo2u+P8EDwyoivB/Qy2SDyOOgQEC0B0JIkyIHrrfQjGxkRqBJdTxu+W
      sHsiBP3G0TZH62AmeJASvLm8CoJ+xJXd2WNsbgaH04kvFBwIsg5ZJruzSyQZp5jPk9vNEEnE
      cHu9+IKBgVsgHYJ3dYMptxtFaeMP6rO1RjPBRyFYdrvodjp4fD78oaDhLILL42F/R4dg2eVE
      0zScLhfegN8wcsjj97J/BIJFUcTmsBMImYTgPR2C7bIOwZJVH+Y3B8E5PD4vtkMIFvTZa3kw
      yDqPQLBk7SvBvR6xlDkIrlUq+gPCIuLx+1AVcxDsOAbBAv5wkFazpc8E/9JK8L+uLqAMIWgJ
      AjiHZIeLy0q/vCHXpzJfZ5lbmamz5rY/GgS3uxrtIS5IAXAa222eWhft6b9IfboBPn71NIZv
      sef0/OlTIdhm0QjbBao9ARC4/vld5CEvytNKVRRefvMtI9NTWCSJ198/4dqXX/D25Wvu/u63
      A9fWyhV+/uZbrty+idvn5S//838z89mVQ1fgQVUuFHnx3ROuzd9hP71LPrPP9NXLbK68NVSC
      j7ZDV0tllp69wB8JIUlWrs0PngnO7u7x5ulzHYLfrlMulrDZbUSSCcMpqZMQfOAO7XQ5uWIQ
      CbXTh+AvDiH4nTv0ZQMI3l7bYKMPwYvPXx5zh567YQDBKycg+Igx1rkg+MlPwDtjrLFLgzsS
      Svk82e0dZj+/zs9/+SuhWJSd9U3iYykmzjhcOXYDBEZG6Sz9G4FEisWiQlBUkKlQaN1l5APe
      AKIoIrvdaJpGIBphbG6WtZevqZVKGD3D260Wo9M6BO+sb1CvVLFYJSQTam670WRsZlqP+dE0
      et0eb54+p6MqaJo2cC/frDd0gK7XiSTiKO02SrttCgoPALrVaICgu0PvbaXpqKrhDXAUggVR
      PJwH1jQzr/tOCdbboV1YJMmUmts6gOB2C6vNpnfcer3m3KFbbRLjo6iKgs3hoKMquL0e0xAc
      HUnS6bcwqO02kUTMFAT7QyEqeT0OSXY62dvcJjqSQGmdC4Lt3Lh+CYfk4PLsGLmaxsRogvNs
      5zVNYzGfpXvGvqDb6VDa3ycQi6IBnkCA0blZwokEdocDecAopcPZh+BEnMTYGCNT47TqTdxe
      D16DgW+Hy0l2Z5dwLIZdlpEkiZsP7vfBTmYQAzjdLrI7ewSjEXq9LsFImF6vh8vrxel2D9wC
      ubzvlGDZ7ULracRHR/D4fbh9g2ODPH4v++k+BLuciIJ5CPb4vOR29/AG/DhkB5LVej4Izubw
      eA8gWD4HBLupFEq4PG6sVgmn202v1yOaGukbbJ1dstNJvVJFdur28R6/D1XtkBhLIdlsAxkg
      n9knu7OrHzSgEY5FUdoKyUkdgk/7jj4aBP/3p88wjkR7vyyiwERg8Ad8VmmA2h1ukygIYB9C
      udYXg2VYMy+Bi2Ub/wNVp6vRPi3mxVSdvu6jQXC63KYwxJuVRIGo29hq5LTqaRoNdbgbQBQg
      IA9/IXaHXCp+ugFMVw+N3pDP625PM45ISi/8zJu8gs2iQSkDgQRTMSffLBb4r/95MGCaKU3T
      2H31gtDkFLuvXxKemkb2BVj6v/+LxNXrFDbXmHsw2OFZabV58c1fmbhyiXq1RrNaQ9M0ut0O
      V+YHq7mNapWlH37gyv375NJplGYLpdXEEwqRmh4cB9uqN3jx7ffM3bxBu9nk7asFYmMpyvkC
      Nw1mgluNJivPX3Dt/jwLP/5Eu9nC7fNSyuaZ/6ffDFx7FgTLLifY6Y8pAAACXUlEQVRXzwnB
      R42xLt+8MXDt9to664srh0qw2lbodMxB8ObKW7ZPg+BolJlrgyF4fWmF3TMgOGXQJZDfy7Dy
      4hV3Hz9ic2mFcqFAV+0wc+Ma7kDg1DXHleDUGJ3CNpraxRIKsL6WYWlxjdr+9ql3z3lLEAS8
      8QStSpnK3g7NYpHsyhJKo44gCIgmQPbQbFXTsDnslPI5RIvY38Mbl6ZBvVymWixSzGSwSFYK
      u7vG710UiCQTeAJ+7E65bxjrMAXfDqeMN6Sn0ITicYr7WXyhEDMGFxIcQPDMMQh2e72mZrVP
      QrAuvgUwo3e0Gk1SUxMofQi2yw78oaAp6FdOQLDVZiUUjdDtmjDGOgHBlsOIJGMItlgsjM3N
      IFoseosLArVKhczW2R0Gx789DWITl7g8lSTfgJFYBZfLxV1RQ+1qWIYdNzz485pGLZ/F5nRx
      9ff/hY7SRrI78I+kaNdqeKLGZk+9TrfvrS/rc6ajo3iDAbomBq5tdjveUAibw8HYpUvkdnZw
      OF34IsZzz6qiUi2VKWazdNUO4XhcdyIzYTLVqNUo7mf7sCxw5e5tZJcTl4nc3LGZSVZfL+IP
      h4mOJGjUaoBgqCDra6dYe7OMGBGJJPTw6YOEeqManZ5kc+UtaHpmcEdVUdpt/CHjOKnU1ATp
      9Q293SQSRuv388RNmIiNTI6zt7lNR9GHb0SLqDs7jBmbarXbbUq5HG6vF6XdJjExRjAWwTfA
      wv6jQfB/++Ep1SGUVYsAUyFzT/PTSh3SyU5AGHj6ZFTDbuNFQcB6ge7Xf6Tq9vQH8TDVg1P5
      4f8D6ce0QeSdbwgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASKElEQVR4nO3daXRU533H8e/so9Fo39CCFmQwAkFsA0ZAsB0Zuz6JE2dDgLOcvElPnKaL
      naVv0hc98YvkRdo6OUnTJm2TeEmwjRPHcR0ItgPGxRBAWEISoH1By2if0YxmvbcvZLkFZHEF
      mrmauf/PK/kcSfNn/Pzm6rnP/z6PSVVVFSEMygogGRBGZZ3/YmZmZsk/HAgEcLlcy1qQEIlk
      BTCZTGRkZNzUL7jZnxNiJTDrXYAQepIACEOTAAhD0xQAVVVpPH8egCt93Vxs74prUUIkivXG
      3wKegQ4GPeOsC0aIRCKEQjEURUFRFKLRaLxrFCJuNAWgaPVadmUWYFIiuN3pxCwKZrMZs9mM
      1arpVwixIpluZSXY5/PJbVCR1GQSLAxNAiAMTQIgDE0CIAxNAiAMTQKgE2lBXxkkADrwTPr5
      9s/epGd4Su9SDE9zK0R3dzcA0xMe+q4Mx7WoVDY8McMPDp3io3W38cyRJmKKondJhqZpGTfg
      m2B0ykelqjI0NIwlLUtaIW7C4JiPn/zuHI89soXiPDeX+sY4eaGfug2lepdmWJoCoKomzEqE
      8SkfeXl5jE7PSivEEvUMTfHjl8/wd5+toyR/bvW8ob6WJ395nC23l5DmsOlcoTFJK0QCdA1O
      8pOXz/B4Qx3FeVe/X8fO99Dn8fKFBzfrVJ2xySQ4jlRVpWtwkv/870a+vn/HdYMf4MOby+kd
      nqLfM61DhUICECeqqnK5f5yf/+E8TzTsoCjHveD3WcxmPvfAJp450owit0YTTgIQB6qqcqF7
      lOeOXuCJhh3kZqYt+v1VxTkU5qRzqnUgQRWKeRKAZaaqKu92jHDwjQs83lBHttup6ef21W/k
      lbcvEwzJXbVEkgAsI1VVOd8xwqHjbXxz/07Ngx/AnWZnz9Y1vPRWWxwrFNeSACwTVVVpbB/m
      1ZOX+ftHd5G1hME/754PVdA+MMHgmC8OFYqFSACWgaqq/PniIK+d6uCJhh240+w39XusFjOP
      7tnE00eapFcoQTQHQHlvyV5V1fe/FnPvx4mmPg6f7uSJhjpczltb0FpblktuhpMzlwaXqUKx
      GG0rwUqUt06c4t57djHrnaCla5Ctd9SiqqrhP6nebOzhZEs/39i/A6fduizvR0P9Rr777NvU
      VhXitMtKezxpendHB/uJqjFmZsMMDg4RnA28P/iNejVQVXizsZvG9hGe2FuH3WpetvfC7bTx
      kTsrefmti+z9yIZl+Z1iYZpbIUKhEIqikJaWRigUwuFwGLYVQlVVjp7poqVnlL/61DZsVsuy
      v0Y0pvDkL4/z2Ce3fuAimrh1mucADoeDtLS09782KlVVefVkOxf7x/nap++Oy+CHuQnx/vtr
      efqwTIjjSe4CLYGqqrx0/CJdg5M89shWrJb4vn3ry/NJd9o4d1mev4gXCYBGqqpy6FgbIxMz
      fPVT2+I++Ocd2LOJl95qIxiWFeJ4kABoMD/4vYEQf/mJLQkb/ADZbie7N5Xz6snLCXtNI5EA
      3ICiqhx8o4VAKMKXHrojoYN/3p6ta2jq9DA6FUj4a6c6CcAiYorCz187TyQa4wsPbsZsNulS
      h9ViZl/9Rp458q5MiJeZBOADxBSFn/3+HHarhc8/uBmTSZ/BP6+mIh+b1UJT54iudaQaCcAC
      YorCf7zaSLY7bUUMfpg7yPDA/bW8eKyNcCSmdzkpQ/O2KOcaGwGY8AzReqkjrkXpKRKN8dNX
      zrEq182++o16l3OVvCwXd9eU8tqpdr1LSRkaT4jpZHh0En8wgt3hIC/PkZLbokSiMX76+0aq
      S3P5i21rVuS/7YEtlTz59Al2bCi94ZNm4sY0t0JMe6exWW1MjXuYjVmorlydUq0QoUiUHx46
      zYbKAj5at1bvchbV3OXh9bNd/O1nt6+IP8+SmeY5QFZmFi6Xi5LVlVRXro5nTQkXikR56sVT
      bK4uWvGDH6C2qgCz2URLz6jepSQ9w0+CQ5EoP3jxNNtrynhwW7Xe5WgyPyF+/s0WIlGZEN8K
      QwcgGI7yTwdPsntzOffeUaF3OUtSkJ3OnWuLOfLnTr1LSWqGDYB/Nsx3nz1B/V1V1G0s07uc
      m/KxurWcbBlgwjurdylJy5AB8AVCfO+5t/lo3Vq2b0jOwQ9gt1nYe98GfvX6BVkhvkmGC4Av
      EOL7B0/yyd3rubsm+Xdl3lxdRDgSpa13TO9SkpKhAjA1E+Sfn3+Hvfdt4K51xXqXsyxMJhOP
      PrCZ599sIRoz5uOpt8IwARibDvAvL7xDQ/1GNlYV6l3OsirKSae2qpCjZ7r0LiXpaG6F6Oyc
      u9sw4Rmiu+9KXItabp5JP98/eJL999eyvjxf73Li4uGd6zjR3MfUTFDvUpKKplYI//QYnkkf
      lYqKPxzDalKTphVidCrAU4dO86WHNnNbSfaKr/dmWc3wiZ1r+dXRZr788J16l5M0NAXAZLHh
      spmY9s5gMyl4w2pSnBDjmfTz49+e4csP30V1aa7e5cTdtpoyjjf10zk4xe0peqVbbil7Qszw
      xAw/PHSarzyyhdWFWXqXkzBD4z7+7Xdn+Ycv3oNFh6fXkk1KvkO9I1M89cI7fPVT2ww1+AGK
      8zKoqSjg9bPdepeSFFIuAF2Dk/z4N2f42me2U5q/Mq9O8fbxXet4q7mPaZkQ31BKBaBrcJJ/
      f+UsTzTUGXbwA7gcNh7esZYX/tQqK8Q3kBIBUFWV9oFx/uu183zzwE6KcmUrwW3rSxn3ztI1
      OKl3KSta0gdAVVXaesd45kgzX2/YQV6mS++SVgSz2cTnH9jEs39sJiYrxB8oqQOgqipNnSM8
      +8dmHt9bR3bG0k9lSWWlBZmsXZ3HsXd79S5lxUraAMwfRvfisffO45LBv6BHdt3O62e78PpD
      epeyImlrhVAUgqEQKqDEooQj+q6mzg/+V/7nMl/ft0MG/yJcThsf27GOl463yYR4AZqWccNB
      P63NLay7q46R7nZ8IZUP1dbodkLM2ctDHD7dweMN20l32uV/7A1srynl2PkeeoanqFyVrXc5
      K4q2PgazGZfTRigcxWQyoShzz6HqcULMieY+3mrq5/G923HarYY9oWapDuyp5ZnDTXzr0V1Y
      dNricSXSFACL2UxGYRnp1ijpJaVkhVVMJhNmsxmLJT4HRFxLVVX+1NjDiQv9fGPfDtIct3YY
      ndFUrsqhYlU277Re4Z4PJdfzz/GkaQ5gtadRWlyE0+HEmZ5BXk5mvOu6yvzgP9k6wLcO7JTB
      f5M+fW8Nh0934g+G9S5lxUiKu0Bef4hL/eN8c/9OHLaV23260qU77Ty0vZoX/ySn0c9LigBk
      uZ185ZGtcTuPy0h21ZYzMOqld3hK71JWhKQIgFg+ZrOJR/fU8us3LqAocvdMAmBAVcU5FGSn
      807rgN6l6E4CYFB779vA709eJhCM6F2KriQABpXhcvDgtmpeOm7sCbEEwMB2by6nZ3iKAY9X
      71J0oykAQb+X5sZz+CMwNNBD3xU5uDkVWMxzp9E/e7TZsBNiTTfV7WlpWE0mFFXB6/URVIOU
      FRcmxbYoYnGVRZnkZDg51drPtvUlepeTcJoCEAoEsLjcKOEgpaUljHlDSbEtitBmf30t33vu
      be5YW2y4VfaU3RZFLM3Rs12MTQXYf3+t3qUklEyCBQD33VHJ5YFxBsd8epeSUBIAAcydRn+g
      vpbnjjajGOj5CgmAeN/a1XlkuOycuzSkdykJIwEQV9lXX8tvT1wkGDLG3T0JgLhKttvJ7s3l
      vPrOZb1LSQgJgLhO/V1VNHd5GJmY0buUuJMAiOvYrBb219fy7B+bU37DAc2tEG2trYRioMYi
      dHT1xLksobf1Ffk4HVbOd6R224umZVyHy0UsGCSqqoz09TAbiiXNCTHi5u29t4anDp3m9rJc
      7LbUfBpPUwBmZ3xYnXb8MwEysrKZGZuUVggDKMhxs31DGUfOdPPJ3ev1LicupBVCLCoSjfGd
      Xxznrz9zNwXZ6XqXs+xkEiwWZbNaaKjfyHNHU3NCLAEQN7SxsgCz2UxTp0fvUpadBEDckMlk
      4sD9tRw61ko4EtO7nGUlARCa5Ge52Lq+hMOnO/QuZdlEojGNm+MKATx0923848+PsXPT6qQ8
      iSccjTE8PkNb7yhtvWOMTQfkLpBYmqbOEY6d7+Vrn96GybSyd5meH/AXuj209Y4x4Z1lVa6b
      mop8airyWZXrliuAWJpNawp541w3rT2jbKwq1Lucqyw44PPc1FYV8Lk9myjKTb8utJquAJGg
      n94ro6xZU0nAO8GkP8rqkkK5AhiUZ9LPj37zZ779xd267te62ICvKS9YcMBfS9MVwGy1Epoe
      ZzZWidXuIDrpk1YIA8vNcLB5TQGHT3fw0N3VCXvdSFRheNJPW+/YewM+QEGWi9qqAvZ9pIai
      XDf/f7jHYje+Y6VtV4jZAAoK094ZAiPdxBzZ0gphcB/ftZ7v/OIYOzeVk5uRFpfXuPYTftI3
      S1Hu4n/SLJVMgsVNa2wf5mRLP489snVZJsSLDXitf9IslXx8i5t2x21FvHG2i0t946yvyF/y
      z4ejMYbGZ2j5gE/4wtx0zHG+0yRXAHFLRiZm+NeXz/DtL96D1bL4umooEmV4wr/ggK8pL0jI
      gL+WBEDcshfebCEr3cmD10yIQ5Eog2M+LnSPcrF3jGl/kOK8DDZU5us24K8lARC3LBiO8uQv
      j/M3n9mOPxi+asCX5GdQW1XI+vJ8CrJdK27xTAIglsX5jmF+/foFyouyVvSAv5YEQBiadIMK
      Q5MACEPTvC1K07mz+CMw0NtF66XU6QkXxqZpIczmdGIzm4kpCorZijtNlV4gkRI0BSASDGJJ
      z4BIkBy3C29IlV4gkRLkLpAwNJkEC0OTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEPTFIBQwMfF
      1hZmo+AZ6qe9uy/edQmREJqWce2ONNxuN2YTBAKzzAYVaYUQKUFTALwTo0wHgqT7/TgcDuyq
      Iq0QIiVIK4QwNJkEC0OTAAhDkwAIQ5MACEOTAAhDkwAIQ1swAG3vnuA3B48QTHQ1QiTYggEo
      KCrDnZ+O/b3/joaDdHR0EVVgdmaa/sGRBJYoRPwsuIzb13uF2clhTjW2sOPOjWAyk25TCcag
      v6ebtKxCaYUQKWHBAGS6rLQPjLPtvlUA+Cc8DE7PsibHT1ZWNp7pKSpXl0grhEh6C47eoGom
      z5lGbn4eAFlFZWwpKgMgJzOdktWJK1CIeFqwF+hKfx+5hatwOuwstrev9AKJZLfgJNg70s3B
      F/9AJNHVCJFgCwYgZoHg+DRKoqsRIsEWnAPk55Wx5cO52BJdjRAJtuAVQFEh4PPJFUCkvAUD
      MDkxSHtrjwRApLwF/wQqrqhhU8CKJdHVCJFgC14BIoEZXNnZxCKxRNcjREJddwUI+b20tLZi
      SctlyuujKC+b0GwA3+QotvwKzH4P/aM+atauQVXnDsoQIllddwWw2Ozk5BZSXV1FQV42AJGg
      n1F/DLsaxjM6xvjYWMILFSIerrsCWO1O8jIdnD3bRGHJA9gBZ3oGhcpcVqrXbaBiTRSTyYTJ
      ZMJslkcKRPJacPSOTY3Rf+n/7gJZ7U7y8vJIc8w1SEsDnEgVC47kstJKare5ZCFMpLzrrgCq
      quIZ7efSu+3SCyRS3nUBmJ0eY9JnYvt9W7TtmyhEErsuADFFwepwUbKqQJ6YFylP9gYVhiYf
      8sLQJADC0DSfENNy/izeMEx4hmhquRTvuoRICE03esxmM5mFpbht4LPaKClZJduiiJSgKQDh
      UIiAz8u0O4NwcJaZ8Cz5OVmyLYpIenIXSBiaTIKFoUkAhKFJAIShSQCEoUkAhKFJAIShSQCE
      oWluhbjYcoFABDxDA3R098W7LiESQtMyrt3hJD0jE6sFQjFwWE3SCiFSgqYAeCfH8QVmcc/4
      SbOamA7N9QdJK4RIdtIKIQxNJsHC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0DQFIBoOMuyZ
      OxNgetxD35WRuBYlRKJo2xXCYiUWDQMwMTmJL6RSVlwgrRAi6WkKQCQ0y+CVKzhdGZjNJkCV
      VgiREqQVQhiaTIKFoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFpCkAk6OdSZzcAA71d
      9F0ZjmtRQiSKpj4GmzOdzHQnADMzMwSiAcqKC6UXSCQ9TQEIBXxMTU5hd7qpqKhgzBuSXiCR
      EqQXSBja/wJT2oaxeslRoAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
